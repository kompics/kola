/*
 * This file is part of the Kompics component model runtime.
 *
 * Copyright (C) 2009 Swedish Institute of Computer Science (SICS) 
 * Copyright (C) 2009 Royal Institute of Technology (KTH)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package se.sics.kola;

event TestEvent1(String some)
event TestEvent2(String some)
event SingletonEvent

componentdef KolaTestC {

	requires TestPort test;

	component KolaTestChild("InitStringA", "InitStringB") child;

	!connect child => test : TestPort;

    handle startHandler => control : Start e {
    	TestUtil.submit("STARTED");
    	!trigger new TestEvent1("RECEIVED") => test;
    }

    handler testHandler : TestEvent2 e {
    	if (SingletonEvent.event != null) {
    		TestUtil.submit("SingletonEvent");
    	}
    	TestUtil.submit(e.some);
    }

    !subscribe testHandler => test;
}

componentdef KolaTestChild {
	provides TestPort test;

	init (String a, String b) {
		TestUtil.submit(a);
		TestUtil.submit(b);
	}

	handle testHandler => test : TestEvent1 e {
		TestUtil.submit(e.some);
		!trigger new TestEvent2("REPLIED") => test;
	}
}
