package se.sics.kola;

import junit.framework.Assert;

/*
 * This file is part of the Kompics component model runtime.
 *
 * Copyright (C) 2009 Swedish Institute of Computer Science (SICS) 
 * Copyright (C) 2009 Royal Institute of Technology (KTH)
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/**
 *
 * @author lkroll
 */
public class BasicTests {
    public boolean test() {
        System.out.println("Running language feature tests...");
        integerArithmeticsTest();
        bitwiseTests();
        booleanTests();
        return true;
    }
    
    private void integerArithmeticsTest() {
        System.out.println("Running integer arithmetic tests...");
        int x, y, z;
        x = 5;
        y = -x;
        Assert.assertEquals(-5, y);
        x = 5;
        y = 3;
        z = x+y;
        Assert.assertEquals(8, z);
        x = 5;
        y = 3;
        z = x-y;
        Assert.assertEquals(2, z);
        x = 5;
        y = 3;
        z = x*y;
        Assert.assertEquals(15, z);
        x = 6;
        y = 3;
        z = x/y;
        Assert.assertEquals(2, z);
        x = 5;
        y = 3;
        z = x%y;
        Assert.assertEquals(2, z);
        x = 5;
        y = x++;
        Assert.assertEquals(6, x);
        Assert.assertEquals(5, y);
        x = 5;
        y = x--;
        Assert.assertEquals(4, x);
        Assert.assertEquals(5, y);
        x = 5;
        y = ++x;
        Assert.assertEquals(6, x);
        Assert.assertEquals(6, y);
        x = 5;
        y = --x;
        Assert.assertEquals(4, x);
        Assert.assertEquals(4, y);
    }
    
    private void bitwiseTests() {
        System.out.println("Running bitwise tests...");
        int x, y, z;
        x = 8;
        y = x >>> 1;
        Assert.assertEquals(4, y);
        x = 8;
        y = x << 1;
        Assert.assertEquals(16, y);
        x = -1;
        y = x >> 1;
        Assert.assertEquals(-1, y);
        x = -1;
        y = ~x;
        Assert.assertEquals(0, y);
        x = 8;
        y = 4;
        z = x | y;
        Assert.assertEquals(12, z);
        x = 8;
        y = 12;
        z = x & y;
        Assert.assertEquals(8, z);
        x = 8;
        y = 12;
        z = x ^ y;
        Assert.assertEquals(4, z);
    }
    
    private void booleanTests() {
        System.out.println("Running boolean tests...");
        boolean x, y, z;
        x = true;
        y = !x;
        Assert.assertEquals(false, y);
        x = true;
        y = false;
        z = x && y;
        Assert.assertEquals(false, z);
        x = true;
        y = false;
        z = x || y;
        Assert.assertEquals(true, z);
        x = true;
        y = false;
        z = x ? y : true;
        Assert.assertEquals(false, z);
    }
}
