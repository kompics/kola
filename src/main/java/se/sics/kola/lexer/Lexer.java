/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.lexer;

import java.io.*;
import se.sics.kola.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 65:
                        {
                            @SuppressWarnings("hiding") Token token = new65(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 66:
                        {
                            @SuppressWarnings("hiding") Token token = new66(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 67:
                        {
                            @SuppressWarnings("hiding") Token token = new67(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 68:
                        {
                            @SuppressWarnings("hiding") Token token = new68(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 69:
                        {
                            @SuppressWarnings("hiding") Token token = new69(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 70:
                        {
                            @SuppressWarnings("hiding") Token token = new70(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 71:
                        {
                            @SuppressWarnings("hiding") Token token = new71(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 72:
                        {
                            @SuppressWarnings("hiding") Token token = new72(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 73:
                        {
                            @SuppressWarnings("hiding") Token token = new73(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 74:
                        {
                            @SuppressWarnings("hiding") Token token = new74(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 75:
                        {
                            @SuppressWarnings("hiding") Token token = new75(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 76:
                        {
                            @SuppressWarnings("hiding") Token token = new76(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 77:
                        {
                            @SuppressWarnings("hiding") Token token = new77(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 78:
                        {
                            @SuppressWarnings("hiding") Token token = new78(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 79:
                        {
                            @SuppressWarnings("hiding") Token token = new79(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 80:
                        {
                            @SuppressWarnings("hiding") Token token = new80(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 81:
                        {
                            @SuppressWarnings("hiding") Token token = new81(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 82:
                        {
                            @SuppressWarnings("hiding") Token token = new82(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 83:
                        {
                            @SuppressWarnings("hiding") Token token = new83(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 84:
                        {
                            @SuppressWarnings("hiding") Token token = new84(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 85:
                        {
                            @SuppressWarnings("hiding") Token token = new85(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 86:
                        {
                            @SuppressWarnings("hiding") Token token = new86(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 87:
                        {
                            @SuppressWarnings("hiding") Token token = new87(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 88:
                        {
                            @SuppressWarnings("hiding") Token token = new88(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 89:
                        {
                            @SuppressWarnings("hiding") Token token = new89(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 90:
                        {
                            @SuppressWarnings("hiding") Token token = new90(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 91:
                        {
                            @SuppressWarnings("hiding") Token token = new91(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 92:
                        {
                            @SuppressWarnings("hiding") Token token = new92(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 93:
                        {
                            @SuppressWarnings("hiding") Token token = new93(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 94:
                        {
                            @SuppressWarnings("hiding") Token token = new94(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 95:
                        {
                            @SuppressWarnings("hiding") Token token = new95(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 96:
                        {
                            @SuppressWarnings("hiding") Token token = new96(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 97:
                        {
                            @SuppressWarnings("hiding") Token token = new97(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 98:
                        {
                            @SuppressWarnings("hiding") Token token = new98(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 99:
                        {
                            @SuppressWarnings("hiding") Token token = new99(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 100:
                        {
                            @SuppressWarnings("hiding") Token token = new100(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 101:
                        {
                            @SuppressWarnings("hiding") Token token = new101(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 102:
                        {
                            @SuppressWarnings("hiding") Token token = new102(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 103:
                        {
                            @SuppressWarnings("hiding") Token token = new103(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 104:
                        {
                            @SuppressWarnings("hiding") Token token = new104(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 105:
                        {
                            @SuppressWarnings("hiding") Token token = new105(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 106:
                        {
                            @SuppressWarnings("hiding") Token token = new106(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 107:
                        {
                            @SuppressWarnings("hiding") Token token = new107(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 108:
                        {
                            @SuppressWarnings("hiding") Token token = new108(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 109:
                        {
                            @SuppressWarnings("hiding") Token token = new109(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 110:
                        {
                            @SuppressWarnings("hiding") Token token = new110(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 111:
                        {
                            @SuppressWarnings("hiding") Token token = new111(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 112:
                        {
                            @SuppressWarnings("hiding") Token token = new112(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 113:
                        {
                            @SuppressWarnings("hiding") Token token = new113(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 114:
                        {
                            @SuppressWarnings("hiding") Token token = new114(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 115:
                        {
                            @SuppressWarnings("hiding") Token token = new115(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 116:
                        {
                            @SuppressWarnings("hiding") Token token = new116(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 117:
                        {
                            @SuppressWarnings("hiding") Token token = new117(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 118:
                        {
                            @SuppressWarnings("hiding") Token token = new118(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 119:
                        {
                            @SuppressWarnings("hiding") Token token = new119(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 120:
                        {
                            @SuppressWarnings("hiding") Token token = new120(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 121:
                        {
                            @SuppressWarnings("hiding") Token token = new121(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 122:
                        {
                            @SuppressWarnings("hiding") Token token = new122(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 123:
                        {
                            @SuppressWarnings("hiding") Token token = new123(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbstractKeyword(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssertKeyword(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleanKeyword(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreakKeyword(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TByteKeyword(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaseKeyword(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCatchKeyword(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharKeyword(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TClassKeyword(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstKeyword(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContinueKeyword(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDefaultKeyword(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoKeyword(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoubleKeyword(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElseKeyword(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnumKeyword(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TExtendsKeyword(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinalKeyword(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinallyKeyword(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatKeyword(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TForKeyword(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIfKeyword(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGotoKeyword(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImplementsKeyword(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImportKeyword(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInstanceofKeyword(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntKeyword(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInterfaceKeyword(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLongKeyword(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNativeKeyword(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNewKeyword(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPackageKeyword(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrivateKeyword(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProtectedKeyword(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPublicKeyword(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturnKeyword(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShortKeyword(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStaticKeyword(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStrictfpKeyword(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSuperKeyword(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSwitchKeyword(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSynchronizedKeyword(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThisKeyword(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThrowKeyword(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThrowsKeyword(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTransientKeyword(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTryKeyword(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVoidKeyword(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVolatileKeyword(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhileKeyword(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THandlerKeyword(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THandleKeyword(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPortKeyword(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComponentKeyword(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComponentdefKeyword(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSubscribeKeyword(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUnsubscribeKeyword(line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConnectKeyword(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDisconnectKeyword(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInitKeyword(line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTriggerKeyword(line, pos); }
    Token new62(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRequiresKeyword(line, pos); }
    Token new63(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProvidesKeyword(line, pos); }
    Token new64(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIndicationKeyword(line, pos); }
    Token new65(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRequestKeyword(line, pos); }
    Token new66(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEventKeyword(line, pos); }
    Token new67(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRArrow(line, pos); }
    Token new68(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntegerLiteral(text, line, pos); }
    Token new69(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatingPointLiteral(text, line, pos); }
    Token new70(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleanLiteral(text, line, pos); }
    Token new71(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharacterLiteral(text, line, pos); }
    Token new72(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(text, line, pos); }
    Token new73(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNullLiteral(line, pos); }
    Token new74(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new75(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new76(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new77(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrc(line, pos); }
    Token new78(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrc(line, pos); }
    Token new79(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBkt(line, pos); }
    Token new80(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBkt(line, pos); }
    Token new81(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemi(line, pos); }
    Token new82(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new83(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new84(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new85(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new86(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new87(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEmark(line, pos); }
    Token new88(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTilde(line, pos); }
    Token new89(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQmark(line, pos); }
    Token new90(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new91(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new92(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLteq(line, pos); }
    Token new93(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGteq(line, pos); }
    Token new94(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNeq(line, pos); }
    Token new95(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmpAmp(line, pos); }
    Token new96(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarBar(line, pos); }
    Token new97(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusPlus(line, pos); }
    Token new98(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusMinus(line, pos); }
    Token new99(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new100(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new101(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new102(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }
    Token new103(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmp(line, pos); }
    Token new104(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBar(line, pos); }
    Token new105(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaret(line, pos); }
    Token new106(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPercent(line, pos); }
    Token new107(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShl(line, pos); }
    Token new108(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShr(line, pos); }
    Token new109(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUshr(line, pos); }
    Token new110(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusAssign(line, pos); }
    Token new111(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusAssign(line, pos); }
    Token new112(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStarAssign(line, pos); }
    Token new113(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlashAssign(line, pos); }
    Token new114(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmpAssign(line, pos); }
    Token new115(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarAssign(line, pos); }
    Token new116(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaretAssign(line, pos); }
    Token new117(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPercentAssign(line, pos); }
    Token new118(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShlAssign(line, pos); }
    Token new119(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShrAssign(line, pos); }
    Token new120(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUshrAssign(line, pos); }
    Token new121(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDotDotDot(line, pos); }
    Token new122(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAt(line, pos); }
    Token new123(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpaces(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {36, 36, 8}, {37, 37, 9}, {38, 38, 10}, {39, 39, 11}, {40, 40, 12}, {41, 41, 13}, {42, 42, 14}, {43, 43, 15}, {44, 44, 16}, {45, 45, 17}, {46, 46, 18}, {47, 47, 19}, {48, 48, 20}, {49, 49, 21}, {50, 50, 22}, {51, 51, 23}, {52, 52, 24}, {53, 53, 25}, {54, 54, 26}, {55, 55, 27}, {56, 56, 28}, {57, 57, 29}, {58, 58, 30}, {59, 59, 31}, {60, 60, 32}, {61, 61, 33}, {62, 62, 34}, {63, 63, 35}, {64, 64, 36}, {65, 90, 37}, {91, 91, 38}, {93, 93, 39}, {94, 94, 40}, {95, 95, 41}, {97, 97, 42}, {98, 98, 43}, {99, 99, 44}, {100, 100, 45}, {101, 101, 46}, {102, 102, 47}, {103, 103, 48}, {104, 104, 49}, {105, 105, 50}, {106, 107, 51}, {108, 108, 52}, {109, 109, 51}, {110, 110, 53}, {111, 111, 51}, {112, 112, 54}, {113, 113, 51}, {114, 114, 55}, {115, 115, 56}, {116, 116, 57}, {117, 117, 51}, {118, 118, 58}, {119, 119, 59}, {120, 122, 51}, {123, 123, 60}, {124, 124, 61}, {125, 125, 62}, {126, 126, 63}, {170, 170, 64}, {181, 181, 65}, {186, 186, 66}, {192, 214, 67}, {216, 246, 68}, {248, 501, 69}, {506, 535, 70}, {592, 680, 71}, {688, 696, 72}, {699, 705, 73}, {720, 721, 74}, {736, 740, 75}, {890, 890, 76}, {902, 902, 77}, {904, 906, 78}, {908, 908, 79}, {910, 929, 80}, {931, 974, 81}, {976, 982, 82}, {986, 986, 83}, {988, 988, 84}, {990, 990, 85}, {992, 992, 86}, {994, 1011, 87}, {1025, 1036, 88}, {1038, 1103, 89}, {1105, 1116, 90}, {1118, 1153, 91}, {1168, 1220, 92}, {1223, 1224, 93}, {1227, 1228, 94}, {1232, 1259, 95}, {1262, 1269, 96}, {1272, 1273, 97}, {1329, 1366, 98}, {1369, 1369, 99}, {1377, 1415, 100}, {1488, 1514, 101}, {1520, 1522, 102}, {1569, 1594, 103}, {1600, 1610, 104}, {1649, 1719, 105}, {1722, 1726, 106}, {1728, 1742, 107}, {1744, 1747, 108}, {1749, 1749, 109}, {1765, 1766, 110}, {2309, 2361, 111}, {2365, 2365, 112}, {2392, 2401, 113}, {2437, 2444, 114}, {2447, 2448, 115}, {2451, 2472, 116}, {2474, 2480, 117}, {2482, 2482, 118}, {2486, 2489, 119}, {2524, 2525, 120}, {2527, 2529, 121}, {2544, 2545, 122}, {2565, 2570, 123}, {2575, 2576, 124}, {2579, 2600, 125}, {2602, 2608, 126}, {2610, 2611, 127}, {2613, 2614, 128}, {2616, 2617, 129}, {2649, 2652, 130}, {2654, 2654, 131}, {2674, 2676, 132}, {2693, 2699, 133}, {2701, 2701, 134}, {2703, 2705, 135}, {2707, 2728, 136}, {2730, 2736, 137}, {2738, 2739, 138}, {2741, 2745, 139}, {2749, 2749, 140}, {2784, 2784, 141}, {2821, 2828, 142}, {2831, 2832, 143}, {2835, 2856, 144}, {2858, 2864, 145}, {2866, 2867, 146}, {2870, 2873, 147}, {2877, 2877, 148}, {2908, 2909, 149}, {2911, 2913, 150}, {2949, 2954, 151}, {2958, 2960, 152}, {2962, 2965, 153}, {2969, 2970, 154}, {2972, 2972, 155}, {2974, 2975, 156}, {2979, 2980, 157}, {2984, 2986, 158}, {2990, 2997, 159}, {2999, 3001, 160}, {3077, 3084, 161}, {3086, 3088, 162}, {3090, 3112, 163}, {3114, 3123, 164}, {3125, 3129, 165}, {3168, 3169, 166}, {3205, 3212, 167}, {3214, 3216, 168}, {3218, 3240, 169}, {3242, 3251, 170}, {3253, 3257, 171}, {3294, 3294, 172}, {3296, 3297, 173}, {3333, 3340, 174}, {3342, 3344, 175}, {3346, 3368, 176}, {3370, 3385, 177}, {3424, 3425, 178}, {3585, 3630, 179}, {3632, 3632, 180}, {3634, 3635, 181}, {3648, 3654, 182}, {3713, 3714, 183}, {3716, 3716, 184}, {3719, 3720, 185}, {3722, 3722, 186}, {3725, 3725, 187}, {3732, 3735, 188}, {3737, 3743, 189}, {3745, 3747, 190}, {3749, 3749, 191}, {3751, 3751, 192}, {3754, 3755, 193}, {3757, 3758, 194}, {3760, 3760, 195}, {3762, 3763, 196}, {3773, 3773, 197}, {3776, 3780, 198}, {3782, 3782, 199}, {3804, 3805, 200}, {3904, 3911, 201}, {3913, 3945, 202}, {4256, 4293, 203}, {4304, 4342, 204}, {4352, 4441, 205}, {4447, 4514, 206}, {4520, 4601, 207}, {7680, 7835, 208}, {7840, 7929, 209}, {7936, 7957, 210}, {7960, 7965, 211}, {7968, 8005, 212}, {8008, 8013, 213}, {8016, 8023, 214}, {8025, 8025, 215}, {8027, 8027, 216}, {8029, 8029, 217}, {8031, 8061, 218}, {8064, 8116, 219}, {8118, 8124, 220}, {8126, 8126, 221}, {8130, 8132, 222}, {8134, 8140, 223}, {8144, 8147, 224}, {8150, 8155, 225}, {8160, 8172, 226}, {8178, 8180, 227}, {8182, 8188, 228}, {8319, 8319, 229}, {8450, 8450, 230}, {8455, 8455, 231}, {8458, 8467, 232}, {8469, 8469, 233}, {8472, 8477, 234}, {8484, 8484, 235}, {8486, 8486, 236}, {8488, 8488, 237}, {8490, 8497, 238}, {8499, 8504, 239}, {12293, 12293, 240}, {12337, 12341, 241}, {12353, 12436, 242}, {12443, 12446, 243}, {12449, 12538, 244}, {12540, 12542, 245}, {12549, 12588, 246}, {12593, 12686, 247}, {19968, 40869, 248}, {44032, 55203, 249}, {63744, 64045, 250}, {64256, 64262, 251}, {64275, 64279, 252}, {64287, 64296, 253}, {64298, 64310, 254}, {64312, 64316, 255}, {64318, 64318, 256}, {64320, 64321, 257}, {64323, 64324, 258}, {64326, 64433, 259}, {64467, 64829, 260}, {64848, 64911, 261}, {64914, 64967, 262}, {65008, 65019, 263}, {65136, 65138, 264}, {65140, 65140, 265}, {65142, 65276, 266}, {65313, 65338, 267}, {65345, 65370, 268}, {65382, 65470, 269}, {65474, 65479, 270}, {65482, 65487, 271}, {65490, 65495, 272}, {65498, 65500, 273}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 274}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 275}, {99, 99, 276}, {100, 100, 277}, {115, 115, 278}, {116, 116, 279}, {117, 117, 280}, },
            {{0, 9, 281}, {11, 12, 281}, {14, 33, 281}, {34, 34, 282}, {35, 91, 281}, {92, 92, 283}, {93, 65535, 281}, },
            {{36, 36, 284}, {48, 57, 285}, {65, 90, 286}, {95, 95, 287}, {97, 122, 288}, {170, 170, 289}, {181, 181, 290}, {186, 186, 291}, {192, 214, 292}, {216, 246, 293}, {248, 501, 294}, {506, 535, 295}, {592, 680, 296}, {688, 696, 297}, {699, 705, 298}, {720, 721, 299}, {736, 740, 300}, {890, 890, 301}, {902, 902, 302}, {904, 906, 303}, {908, 908, 304}, {910, 929, 305}, {931, 974, 306}, {976, 982, 307}, {986, 986, 308}, {988, 988, 309}, {990, 990, 310}, {992, 992, 311}, {994, 1011, 312}, {1025, 1036, 313}, {1038, 1103, 314}, {1105, 1116, 315}, {1118, 1153, 316}, {1168, 1220, 317}, {1223, 1224, 318}, {1227, 1228, 319}, {1232, 1259, 320}, {1262, 1269, 321}, {1272, 1273, 322}, {1329, 1366, 323}, {1369, 1369, 324}, {1377, 1415, 325}, {1488, 1514, 326}, {1520, 1522, 327}, {1569, 1594, 328}, {1600, 1610, 329}, {1632, 1641, 330}, {1649, 1719, 331}, {1722, 1726, 332}, {1728, 1742, 333}, {1744, 1747, 334}, {1749, 1749, 335}, {1765, 1766, 336}, {1776, 1785, 337}, {2309, 2361, 338}, {2365, 2365, 339}, {2392, 2401, 340}, {2406, 2415, 341}, {2437, 2444, 342}, {2447, 2448, 343}, {2451, 2472, 344}, {2474, 2480, 345}, {2482, 2482, 346}, {2486, 2489, 347}, {2524, 2525, 348}, {2527, 2529, 349}, {2534, 2543, 350}, {2544, 2545, 351}, {2565, 2570, 352}, {2575, 2576, 353}, {2579, 2600, 354}, {2602, 2608, 355}, {2610, 2611, 356}, {2613, 2614, 357}, {2616, 2617, 358}, {2649, 2652, 359}, {2654, 2654, 360}, {2662, 2671, 361}, {2674, 2676, 362}, {2693, 2699, 363}, {2701, 2701, 364}, {2703, 2705, 365}, {2707, 2728, 366}, {2730, 2736, 367}, {2738, 2739, 368}, {2741, 2745, 369}, {2749, 2749, 370}, {2784, 2784, 371}, {2790, 2799, 372}, {2821, 2828, 373}, {2831, 2832, 374}, {2835, 2856, 375}, {2858, 2864, 376}, {2866, 2867, 377}, {2870, 2873, 378}, {2877, 2877, 379}, {2908, 2909, 380}, {2911, 2913, 381}, {2918, 2927, 382}, {2949, 2954, 383}, {2958, 2960, 384}, {2962, 2965, 385}, {2969, 2970, 386}, {2972, 2972, 387}, {2974, 2975, 388}, {2979, 2980, 389}, {2984, 2986, 390}, {2990, 2997, 391}, {2999, 3001, 392}, {3047, 3055, 393}, {3077, 3084, 394}, {3086, 3088, 395}, {3090, 3112, 396}, {3114, 3123, 397}, {3125, 3129, 398}, {3168, 3169, 399}, {3174, 3183, 400}, {3205, 3212, 401}, {3214, 3216, 402}, {3218, 3240, 403}, {3242, 3251, 404}, {3253, 3257, 405}, {3294, 3294, 406}, {3296, 3297, 407}, {3302, 3311, 408}, {3333, 3340, 409}, {3342, 3344, 410}, {3346, 3368, 411}, {3370, 3385, 412}, {3424, 3425, 413}, {3430, 3439, 414}, {3585, 3630, 415}, {3632, 3632, 416}, {3634, 3635, 417}, {3648, 3654, 418}, {3664, 3673, 419}, {3713, 3714, 420}, {3716, 3716, 421}, {3719, 3720, 422}, {3722, 3722, 423}, {3725, 3725, 424}, {3732, 3735, 425}, {3737, 3743, 426}, {3745, 3747, 427}, {3749, 3749, 428}, {3751, 3751, 429}, {3754, 3755, 430}, {3757, 3758, 431}, {3760, 3760, 432}, {3762, 3763, 433}, {3773, 3773, 434}, {3776, 3780, 435}, {3782, 3782, 436}, {3792, 3801, 437}, {3804, 3805, 438}, {3872, 3881, 439}, {3904, 3911, 440}, {3913, 3945, 441}, {4256, 4293, 442}, {4304, 4342, 443}, {4352, 4441, 444}, {4447, 4514, 445}, {4520, 4601, 446}, {7680, 7835, 447}, {7840, 7929, 448}, {7936, 7957, 449}, {7960, 7965, 450}, {7968, 8005, 451}, {8008, 8013, 452}, {8016, 8023, 453}, {8025, 8025, 454}, {8027, 8027, 455}, {8029, 8029, 456}, {8031, 8061, 457}, {8064, 8116, 458}, {8118, 8124, 459}, {8126, 8126, 460}, {8130, 8132, 461}, {8134, 8140, 462}, {8144, 8147, 463}, {8150, 8155, 464}, {8160, 8172, 465}, {8178, 8180, 466}, {8182, 8188, 467}, {8319, 8319, 468}, {8450, 8450, 469}, {8455, 8455, 470}, {8458, 8467, 471}, {8469, 8469, 472}, {8472, 8477, 473}, {8484, 8484, 474}, {8486, 8486, 475}, {8488, 8488, 476}, {8490, 8497, 477}, {8499, 8504, 478}, {12293, 12293, 479}, {12337, 12341, 480}, {12353, 12436, 481}, {12443, 12446, 482}, {12449, 12538, 483}, {12540, 12542, 484}, {12549, 12588, 485}, {12593, 12686, 486}, {19968, 40869, 487}, {44032, 55203, 488}, {63744, 64045, 489}, {64256, 64262, 490}, {64275, 64279, 491}, {64287, 64296, 492}, {64298, 64310, 493}, {64312, 64316, 494}, {64318, 64318, 495}, {64320, 64321, 496}, {64323, 64324, 497}, {64326, 64433, 498}, {64467, 64829, 499}, {64848, 64911, 500}, {64914, 64967, 501}, {65008, 65019, 502}, {65136, 65138, 503}, {65140, 65140, 504}, {65142, 65276, 505}, {65296, 65305, 506}, {65313, 65338, 507}, {65345, 65370, 508}, {65382, 65470, 509}, {65474, 65479, 510}, {65482, 65487, 511}, {65490, 65495, 512}, {65498, 65500, 513}, },
            {{61, 61, 514}, },
            {{38, 38, 515}, {61, 61, 516}, },
            {{0, 9, 517}, {11, 12, 517}, {14, 38, 517}, {40, 91, 517}, {92, 92, 518}, {93, 65535, 517}, },
            {},
            {},
            {{61, 61, 519}, },
            {{43, 43, 520}, {61, 61, 521}, },
            {},
            {{45, 45, 522}, {61, 61, 523}, },
            {{46, 46, 524}, {48, 48, 525}, {49, 49, 526}, {50, 50, 527}, {51, 51, 528}, {52, 52, 529}, {53, 53, 530}, {54, 54, 531}, {55, 55, 532}, {56, 56, 533}, {57, 57, 534}, },
            {{42, 42, 535}, {47, 47, 536}, {61, 61, 537}, },
            {{46, 46, 538}, {48, 48, 539}, {49, 49, 540}, {50, 50, 541}, {51, 51, 542}, {52, 52, 543}, {53, 53, 544}, {54, 54, 545}, {55, 55, 546}, {56, 56, 547}, {57, 57, 548}, {66, 66, 549}, {68, 68, 550}, {69, 69, 551}, {70, 70, 552}, {76, 76, 553}, {88, 88, 554}, {95, 95, 555}, {98, 98, 556}, {100, 100, 557}, {101, 101, 558}, {102, 102, 559}, {108, 108, 560}, {120, 120, 561}, },
            {{46, 46, 538}, {48, 48, 562}, {49, 49, 563}, {50, 50, 564}, {51, 51, 565}, {52, 52, 566}, {53, 53, 567}, {54, 54, 568}, {55, 55, 569}, {56, 56, 570}, {57, 57, 571}, {68, 76, -22}, {95, 95, 572}, {100, 108, -22}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {},
            {},
            {{60, 60, 573}, {61, 61, 574}, },
            {{61, 61, 575}, {62, 62, 576}, },
            {{61, 61, 577}, {62, 62, 578}, },
            {},
            {},
            {{36, 65500, -10}, },
            {},
            {},
            {{61, 61, 579}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 288}, {98, 98, 580}, {99, 114, 288}, {115, 115, 581}, {116, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 110, 288}, {111, 111, 582}, {112, 113, 288}, {114, 114, 583}, {115, 120, 288}, {121, 121, 584}, {122, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 585}, {98, 103, 288}, {104, 104, 586}, {105, 107, 288}, {108, 108, 587}, {109, 110, 288}, {111, 111, 588}, {112, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 100, 288}, {101, 101, 589}, {102, 110, 288}, {111, 111, 590}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 107, 288}, {108, 108, 591}, {109, 109, 288}, {110, 110, 592}, {111, 117, 288}, {118, 118, 593}, {119, 119, 288}, {120, 120, 594}, {121, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 595}, {98, 104, 288}, {105, 105, 596}, {106, 107, 288}, {108, 108, 597}, {109, 110, 288}, {111, 111, 598}, {112, 65500, -46}, },
            {{36, 110, -45}, {111, 111, 599}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 97, 600}, {98, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 101, 288}, {102, 102, 601}, {103, 108, 288}, {109, 109, 602}, {110, 110, 603}, {111, 122, 288}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 604}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 97, 605}, {98, 100, 288}, {101, 101, 606}, {102, 116, 288}, {117, 117, 607}, {118, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 608}, {98, 110, 288}, {111, 111, 609}, {112, 113, 288}, {114, 114, 610}, {115, 116, 288}, {117, 117, 611}, {118, 65500, -55}, },
            {{36, 100, -47}, {101, 101, 612}, {102, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 103, 288}, {104, 104, 613}, {105, 115, 288}, {116, 116, 614}, {117, 117, 615}, {118, 118, 288}, {119, 119, 616}, {120, 120, 288}, {121, 121, 617}, {122, 65500, -45}, },
            {{36, 103, -58}, {104, 104, 618}, {105, 113, 288}, {114, 114, 619}, {115, 122, 288}, {170, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 620}, {112, 65500, -46}, },
            {{36, 103, -58}, {104, 104, 621}, {105, 122, 288}, {170, 65500, -10}, },
            {},
            {{61, 61, 622}, {124, 124, 623}, },
            {},
            {},
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{9, 32, -2}, },
            {},
            {{111, 111, 624}, },
            {{105, 105, 625}, },
            {{117, 117, 626}, },
            {{114, 114, 627}, },
            {{110, 110, 628}, },
            {{0, 65535, -9}, },
            {},
            {{34, 34, 629}, {39, 39, 630}, {48, 48, 631}, {49, 49, 632}, {50, 50, 633}, {51, 51, 634}, {52, 52, 635}, {53, 53, 636}, {54, 54, 637}, {55, 55, 638}, {92, 92, 639}, {98, 98, 640}, {102, 102, 641}, {110, 110, 642}, {114, 114, 643}, {116, 116, 644}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {},
            {},
            {},
            {{39, 39, 645}, },
            {{34, 34, 646}, {39, 39, 647}, {48, 48, 648}, {49, 49, 649}, {50, 50, 650}, {51, 51, 651}, {52, 52, 652}, {53, 53, 653}, {54, 54, 654}, {55, 55, 655}, {92, 92, 656}, {98, 98, 657}, {102, 102, 658}, {110, 110, 659}, {114, 114, 660}, {116, 116, 661}, },
            {},
            {},
            {},
            {},
            {},
            {{46, 46, 662}, },
            {{48, 48, 663}, {49, 49, 664}, {50, 50, 665}, {51, 51, 666}, {52, 52, 667}, {53, 53, 668}, {54, 54, 669}, {55, 55, 670}, {56, 56, 671}, {57, 57, 672}, {68, 68, 673}, {69, 69, 674}, {70, 70, 675}, {95, 95, 676}, {100, 100, 677}, {101, 101, 678}, {102, 102, 679}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{0, 41, 680}, {42, 42, 681}, {43, 65535, 680}, },
            {{0, 9, 682}, {10, 10, 683}, {11, 12, 682}, {13, 13, 684}, {14, 65535, 682}, },
            {},
            {{48, 48, 685}, {49, 49, 686}, {50, 50, 687}, {51, 51, 688}, {52, 52, 689}, {53, 53, 690}, {54, 54, 691}, {55, 55, 692}, {56, 56, 693}, {57, 57, 694}, {68, 68, 695}, {69, 69, 696}, {70, 70, 697}, {100, 100, 698}, {101, 101, 699}, {102, 102, 700}, },
            {{46, 46, 538}, {48, 48, 701}, {49, 49, 702}, {50, 50, 703}, {51, 51, 704}, {52, 52, 705}, {53, 53, 706}, {54, 54, 707}, {55, 55, 708}, {56, 57, -22}, {68, 70, -22}, {76, 76, 709}, {95, 95, 710}, {100, 102, -22}, {108, 108, 711}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 46, 538}, {48, 48, 712}, {49, 49, 713}, {50, 50, 714}, {51, 51, 715}, {52, 52, 716}, {53, 53, 717}, {54, 54, 718}, {55, 55, 719}, {56, 70, -541}, {95, 95, 720}, {100, 102, -22}, },
            {{46, 102, -549}, },
            {{48, 48, 721}, {49, 49, 722}, },
            {},
            {{43, 43, 723}, {45, 45, 724}, {48, 48, 725}, {49, 49, 726}, {50, 50, 727}, {51, 51, 728}, {52, 52, 729}, {53, 53, 730}, {54, 54, 731}, {55, 55, 732}, {56, 56, 733}, {57, 57, 734}, },
            {},
            {},
            {{46, 46, 735}, {48, 48, 736}, {49, 49, 737}, {50, 50, 738}, {51, 51, 739}, {52, 52, 740}, {53, 53, 741}, {54, 54, 742}, {55, 55, 743}, {56, 56, 744}, {57, 57, 745}, {65, 65, 746}, {66, 66, 747}, {67, 67, 748}, {68, 68, 749}, {69, 69, 750}, {70, 70, 751}, {97, 97, 752}, {98, 98, 753}, {99, 99, 754}, {100, 100, 755}, {101, 101, 756}, {102, 102, 757}, },
            {{48, 48, 758}, {49, 49, 759}, {50, 50, 760}, {51, 51, 761}, {52, 52, 762}, {53, 53, 763}, {54, 54, 764}, {55, 55, 765}, {56, 57, -22}, {95, 95, 555}, },
            {{48, 49, -551}, },
            {},
            {{43, 57, -553}, },
            {},
            {},
            {{46, 102, -556}, },
            {{46, 46, 538}, {48, 48, 766}, {49, 49, 767}, {50, 50, 768}, {51, 51, 769}, {52, 52, 770}, {53, 53, 771}, {54, 54, 772}, {55, 55, 773}, {56, 56, 774}, {57, 57, 775}, {68, 76, -22}, {95, 95, 776}, {100, 108, -22}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{48, 48, 777}, {49, 49, 778}, {50, 50, 779}, {51, 51, 780}, {52, 52, 781}, {53, 53, 782}, {54, 54, 783}, {55, 55, 784}, {56, 56, 785}, {57, 57, 786}, {95, 95, 572}, },
            {{61, 61, 787}, },
            {},
            {},
            {},
            {},
            {{61, 61, 788}, {62, 62, 789}, },
            {},
            {{36, 95, -10}, {97, 114, 288}, {115, 115, 790}, {116, 65500, -44}, },
            {{36, 114, -582}, {115, 115, 791}, {116, 65500, -44}, },
            {{36, 110, -45}, {111, 111, 792}, {112, 65500, -46}, },
            {{36, 100, -47}, {101, 101, 793}, {102, 65500, -57}, },
            {{36, 95, -10}, {97, 115, 288}, {116, 116, 794}, {117, 122, 288}, {170, 65500, -10}, },
            {{36, 114, -582}, {115, 115, 795}, {116, 116, 796}, {117, 65500, -586}, },
            {{36, 95, -10}, {97, 97, 797}, {98, 65500, -51}, },
            {{36, 95, -10}, {97, 97, 798}, {98, 65500, -51}, },
            {{36, 95, -10}, {97, 108, 288}, {109, 109, 799}, {110, 110, 800}, {111, 65500, -52}, },
            {{36, 101, -52}, {102, 102, 801}, {103, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 116, 288}, {117, 117, 802}, {118, 65500, -55}, },
            {{36, 114, -582}, {115, 115, 803}, {116, 65500, -44}, },
            {{36, 116, -592}, {117, 117, 804}, {118, 65500, -55}, },
            {{36, 100, -47}, {101, 101, 805}, {102, 65500, -57}, },
            {{36, 115, -586}, {116, 116, 806}, {117, 65500, -586}, },
            {{36, 107, -48}, {108, 108, 807}, {109, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 109, 288}, {110, 110, 808}, {111, 65500, -52}, },
            {{36, 110, -45}, {111, 111, 809}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 113, 288}, {114, 114, 810}, {115, 65500, -59}, },
            {{36, 115, -586}, {116, 116, 811}, {117, 65500, -586}, },
            {{36, 109, -598}, {110, 110, 812}, {111, 65500, -52}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 111, 288}, {112, 112, 813}, {113, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 99, 288}, {100, 100, 814}, {101, 104, 288}, {105, 105, 815}, {106, 114, 288}, {115, 115, 816}, {116, 116, 817}, {117, 65500, -586}, },
            {{36, 109, -598}, {110, 110, 818}, {111, 65500, -52}, },
            {{36, 115, -586}, {116, 116, 819}, {117, 65500, -586}, },
            {{36, 95, -10}, {97, 118, 288}, {119, 119, 820}, {120, 122, 288}, {170, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 821}, {109, 65500, -597}, },
            {{36, 95, -10}, {97, 98, 288}, {99, 99, 822}, {100, 122, 288}, {170, 65500, -10}, },
            {{36, 113, -600}, {114, 114, 823}, {115, 65500, -59}, },
            {{36, 95, -10}, {97, 104, 288}, {105, 105, 824}, {106, 110, 288}, {111, 111, 825}, {112, 65500, -46}, },
            {{36, 97, -44}, {98, 98, 826}, {99, 122, 288}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 112, 288}, {113, 113, 827}, {114, 115, 288}, {116, 116, 828}, {117, 65500, -586}, },
            {{36, 110, -45}, {111, 111, 829}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 97, 830}, {98, 113, 288}, {114, 114, 831}, {115, 65500, -59}, },
            {{36, 111, -604}, {112, 112, 832}, {113, 65500, -604}, },
            {{36, 104, -612}, {105, 105, 833}, {106, 122, 288}, {170, 65500, -10}, },
            {{36, 109, -598}, {110, 110, 834}, {111, 65500, -52}, },
            {{36, 104, -612}, {105, 105, 835}, {106, 113, 288}, {114, 114, 836}, {115, 65500, -59}, },
            {{36, 95, -10}, {97, 97, 837}, {98, 116, 288}, {117, 117, 838}, {118, 120, 288}, {121, 121, 839}, {122, 65500, -45}, },
            {{36, 104, -612}, {105, 105, 840}, {106, 107, 288}, {108, 108, 841}, {109, 65500, -597}, },
            {{36, 104, -612}, {105, 105, 842}, {106, 65500, -618}, },
            {},
            {},
            {{110, 110, 843}, },
            {{115, 115, 844}, },
            {{98, 98, 845}, },
            {{105, 105, 846}, },
            {{115, 115, 847}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 34, -9}, {35, 47, 281}, {48, 48, 848}, {49, 49, 849}, {50, 50, 850}, {51, 51, 851}, {52, 52, 852}, {53, 53, 853}, {54, 54, 854}, {55, 55, 855}, {56, 91, 281}, {92, 65535, -9}, },
            {{0, 65535, -633}, },
            {{0, 65535, -633}, },
            {{0, 65535, -633}, },
            {{0, 47, -633}, {48, 48, 856}, {49, 49, 857}, {50, 50, 858}, {51, 51, 859}, {52, 52, 860}, {53, 53, 861}, {54, 54, 862}, {55, 55, 863}, {56, 65535, -633}, },
            {{0, 65535, -637}, },
            {{0, 65535, -637}, },
            {{0, 65535, -637}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {},
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, {48, 48, 865}, {49, 49, 866}, {50, 50, 867}, {51, 51, 868}, {52, 52, 869}, {53, 53, 870}, {54, 54, 871}, {55, 55, 872}, },
            {{39, 55, -650}, },
            {{39, 55, -650}, },
            {{39, 55, -650}, },
            {{39, 39, 864}, {48, 48, 873}, {49, 49, 874}, {50, 50, 875}, {51, 51, 876}, {52, 52, 877}, {53, 53, 878}, {54, 54, 879}, {55, 55, 880}, },
            {{39, 55, -654}, },
            {{39, 55, -654}, },
            {{39, 55, -654}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {},
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {{48, 102, -527}, },
            {},
            {{43, 43, 881}, {45, 45, 882}, {48, 48, 883}, {49, 49, 884}, {50, 50, 885}, {51, 51, 886}, {52, 52, 887}, {53, 53, 888}, {54, 54, 889}, {55, 55, 890}, {56, 56, 891}, {57, 57, 892}, },
            {},
            {{48, 57, -527}, {95, 95, 676}, },
            {},
            {{43, 57, -676}, },
            {},
            {{0, 65535, -537}, },
            {{0, 41, 893}, {42, 42, 681}, {43, 46, 893}, {47, 47, 894}, {48, 65535, 893}, },
            {{0, 65535, -538}, },
            {},
            {{10, 10, 895}, },
            {{48, 48, 896}, {49, 49, 897}, {50, 50, 898}, {51, 51, 899}, {52, 52, 900}, {53, 53, 901}, {54, 54, 902}, {55, 55, 903}, {56, 56, 904}, {57, 57, 905}, {68, 70, -540}, {95, 95, 906}, {100, 102, -540}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {},
            {{43, 43, 907}, {45, 45, 908}, {48, 48, 909}, {49, 49, 910}, {50, 50, 911}, {51, 51, 912}, {52, 52, 913}, {53, 53, 914}, {54, 54, 915}, {55, 55, 916}, {56, 56, 917}, {57, 57, 918}, },
            {},
            {},
            {{43, 57, -698}, },
            {},
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {{46, 108, -541}, },
            {},
            {{48, 57, -541}, {95, 95, 710}, },
            {},
            {{46, 102, -549}, },
            {{46, 102, -549}, },
            {{46, 102, -549}, },
            {{46, 102, -549}, },
            {{46, 102, -549}, },
            {{46, 102, -549}, },
            {{46, 102, -549}, },
            {{46, 102, -549}, },
            {{48, 57, -549}, {95, 95, 720}, },
            {{48, 48, 919}, {49, 49, 920}, {76, 76, 921}, {95, 95, 922}, {108, 108, 923}, },
            {{48, 108, -723}, },
            {{48, 57, -553}, },
            {{48, 57, -553}, },
            {{48, 48, 924}, {49, 49, 925}, {50, 50, 926}, {51, 51, 927}, {52, 52, 928}, {53, 53, 929}, {54, 54, 930}, {55, 55, 931}, {56, 56, 932}, {57, 57, 933}, {68, 68, 934}, {70, 70, 935}, {95, 95, 936}, {100, 100, 937}, {102, 102, 938}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 48, 939}, {49, 49, 940}, {50, 50, 941}, {51, 51, 942}, {52, 52, 943}, {53, 53, 944}, {54, 54, 945}, {55, 55, 946}, {56, 56, 947}, {57, 57, 948}, {65, 65, 949}, {66, 66, 950}, {67, 67, 951}, {68, 68, 952}, {69, 69, 953}, {70, 70, 954}, {97, 97, 955}, {98, 98, 956}, {99, 99, 957}, {100, 100, 958}, {101, 101, 959}, {102, 102, 960}, },
            {{46, 46, 961}, {48, 48, 962}, {49, 49, 963}, {50, 50, 964}, {51, 51, 965}, {52, 52, 966}, {53, 53, 967}, {54, 54, 968}, {55, 55, 969}, {56, 56, 970}, {57, 57, 971}, {65, 65, 972}, {66, 66, 973}, {67, 67, 974}, {68, 68, 975}, {69, 69, 976}, {70, 70, 977}, {76, 76, 978}, {80, 80, 979}, {95, 95, 980}, {97, 97, 981}, {98, 98, 982}, {99, 99, 983}, {100, 100, 984}, {101, 101, 985}, {102, 102, 986}, {108, 108, 987}, {112, 112, 988}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 46, 538}, {48, 48, 989}, {49, 49, 990}, {50, 50, 991}, {51, 51, 992}, {52, 52, 993}, {53, 53, 994}, {54, 54, 995}, {55, 55, 996}, {56, 76, -541}, {95, 95, 997}, {100, 108, -541}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{46, 108, -564}, },
            {{48, 57, -564}, {95, 95, 776}, },
            {{46, 46, 538}, {48, 48, 998}, {49, 49, 999}, {50, 50, 1000}, {51, 51, 1001}, {52, 52, 1002}, {53, 53, 1003}, {54, 54, 1004}, {55, 55, 1005}, {56, 56, 1006}, {57, 57, 1007}, {68, 76, -22}, {95, 95, 1008}, {100, 108, -22}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {},
            {},
            {{61, 61, 1009}, },
            {{36, 115, -586}, {116, 116, 1010}, {117, 65500, -586}, },
            {{36, 100, -47}, {101, 101, 1011}, {102, 65500, -57}, },
            {{36, 107, -48}, {108, 108, 1012}, {109, 65500, -597}, },
            {{36, 95, -10}, {97, 97, 1013}, {98, 65500, -51}, },
            {{36, 100, -47}, {101, 101, 1014}, {102, 65500, -57}, },
            {{36, 100, -47}, {101, 101, 1015}, {102, 65500, -57}, },
            {{36, 98, -610}, {99, 99, 1016}, {100, 65500, -610}, },
            {{36, 113, -600}, {114, 114, 1017}, {115, 65500, -59}, },
            {{36, 114, -582}, {115, 115, 1018}, {116, 65500, -44}, },
            {{36, 111, -604}, {112, 112, 1019}, {113, 65500, -604}, },
            {{36, 114, -582}, {115, 115, 1020}, {116, 116, 1021}, {117, 65500, -586}, },
            {{36, 95, -10}, {97, 97, 1022}, {98, 65500, -51}, },
            {{36, 97, -44}, {98, 98, 1023}, {99, 65500, -613}, },
            {{36, 100, -47}, {101, 101, 1024}, {102, 65500, -57}, },
            {{36, 108, -590}, {109, 109, 1025}, {110, 122, 288}, {170, 65500, -10}, },
            {{36, 109, -598}, {110, 110, 1026}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1027}, {102, 65500, -57}, },
            {{36, 114, -582}, {115, 115, 1028}, {116, 65500, -44}, },
            {{36, 95, -10}, {97, 97, 1029}, {98, 65500, -51}, },
            {{36, 95, -10}, {97, 97, 1030}, {98, 65500, -51}, },
            {{36, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 1031}, {112, 65500, -46}, },
            {{36, 99, -605}, {100, 100, 1032}, {101, 122, 288}, {170, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1033}, {109, 110, 288}, {111, 111, 1034}, {112, 65500, -46}, },
            {{36, 104, -612}, {105, 105, 1035}, {106, 65500, -618}, },
            {{36, 115, -586}, {116, 116, 1036}, {117, 65500, -586}, },
            {{36, 115, -586}, {116, 116, 1037}, {117, 65500, -586}, },
            {{36, 100, -47}, {101, 101, 1038}, {102, 65500, -57}, },
            {{36, 95, -10}, {97, 102, 288}, {103, 103, 1039}, {104, 122, 288}, {170, 65500, -10}, },
            {{36, 104, -612}, {105, 105, 1040}, {106, 65500, -618}, },
            {{36, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1041}, {109, 65500, -597}, },
            {{36, 95, -10}, {97, 106, 288}, {107, 107, 1042}, {108, 122, 288}, {170, 65500, -10}, },
            {{36, 115, -586}, {116, 116, 1043}, {117, 65500, -586}, },
            {{36, 95, -10}, {97, 117, 288}, {118, 118, 1044}, {119, 122, 288}, {170, 65500, -10}, },
            {{36, 115, -586}, {116, 116, 1045}, {117, 117, 288}, {118, 118, 1046}, {119, 65500, -826}, },
            {{36, 107, -48}, {108, 108, 1047}, {109, 65500, -597}, },
            {{36, 116, -592}, {117, 117, 1048}, {118, 65500, -55}, },
            {{36, 116, -592}, {117, 117, 1049}, {118, 65500, -55}, },
            {{36, 113, -600}, {114, 114, 1050}, {115, 65500, -59}, },
            {{36, 115, -586}, {116, 116, 1051}, {117, 65500, -586}, },
            {{36, 104, -612}, {105, 105, 1052}, {106, 65500, -618}, },
            {{36, 100, -47}, {101, 101, 1053}, {102, 65500, -57}, },
            {{36, 115, -586}, {116, 116, 1054}, {117, 65500, -586}, },
            {{36, 98, -610}, {99, 99, 1055}, {100, 65500, -610}, },
            {{36, 114, -582}, {115, 115, 1056}, {116, 65500, -44}, },
            {{36, 110, -45}, {111, 111, 1057}, {112, 65500, -46}, },
            {{36, 109, -598}, {110, 110, 1058}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1059}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 99, -605}, {100, 100, 1060}, {101, 65500, -814}, },
            {{36, 95, -10}, {97, 97, 1061}, {98, 65500, -51}, },
            {{36, 107, -48}, {108, 108, 1062}, {109, 65500, -597}, },
            {{110, 110, 1063}, },
            {{99, 99, 1064}, },
            {{115, 115, 1065}, },
            {{103, 103, 1066}, },
            {{117, 117, 1067}, },
            {{0, 47, -633}, {48, 48, 1068}, {49, 49, 1069}, {50, 50, 1070}, {51, 51, 1071}, {52, 52, 1072}, {53, 53, 1073}, {54, 54, 1074}, {55, 55, 1075}, {56, 65535, -633}, },
            {{0, 65535, -850}, },
            {{0, 65535, -850}, },
            {{0, 65535, -850}, },
            {{0, 65535, -850}, },
            {{0, 65535, -850}, },
            {{0, 65535, -850}, },
            {{0, 65535, -850}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {},
            {{39, 39, 864}, {48, 48, 1076}, {49, 49, 1077}, {50, 50, 1078}, {51, 51, 1079}, {52, 52, 1080}, {53, 53, 1081}, {54, 54, 1082}, {55, 55, 1083}, },
            {{39, 55, -867}, },
            {{39, 55, -867}, },
            {{39, 55, -867}, },
            {{39, 55, -867}, },
            {{39, 55, -867}, },
            {{39, 55, -867}, },
            {{39, 55, -867}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{48, 57, -676}, },
            {{48, 57, -676}, },
            {{48, 48, 1084}, {49, 49, 1085}, {50, 50, 1086}, {51, 51, 1087}, {52, 52, 1088}, {53, 53, 1089}, {54, 54, 1090}, {55, 55, 1091}, {56, 56, 1092}, {57, 57, 1093}, {68, 68, 673}, {70, 70, 675}, {95, 95, 1094}, {100, 100, 677}, {102, 102, 679}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{0, 41, 1095}, {42, 42, 681}, {43, 65535, 1095}, },
            {},
            {},
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 102, -687}, },
            {{48, 57, -687}, {95, 95, 906}, },
            {{48, 57, -698}, },
            {{48, 57, -698}, },
            {{48, 48, 1096}, {49, 49, 1097}, {50, 50, 1098}, {51, 51, 1099}, {52, 52, 1100}, {53, 53, 1101}, {54, 54, 1102}, {55, 55, 1103}, {56, 56, 1104}, {57, 57, 1105}, {68, 68, 695}, {70, 70, 697}, {95, 95, 1106}, {100, 100, 698}, {102, 102, 700}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 108, -723}, },
            {{48, 108, -723}, },
            {},
            {{48, 49, -723}, {95, 95, 922}, },
            {},
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {{48, 102, -727}, },
            {},
            {},
            {{48, 57, -727}, {95, 95, 936}, },
            {},
            {},
            {{48, 48, 1107}, {49, 49, 1108}, {50, 50, 1109}, {51, 51, 1110}, {52, 52, 1111}, {53, 53, 1112}, {54, 54, 1113}, {55, 55, 1114}, {56, 56, 1115}, {57, 57, 1116}, {65, 65, 1117}, {66, 66, 1118}, {67, 67, 1119}, {68, 68, 1120}, {69, 69, 1121}, {70, 70, 1122}, {80, 80, 979}, {95, 95, 1123}, {97, 97, 1124}, {98, 98, 1125}, {99, 99, 1126}, {100, 100, 1127}, {101, 101, 1128}, {102, 102, 1129}, {112, 112, 988}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 70, -737}, {80, 80, 979}, {97, 102, -737}, {112, 112, 988}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {},
            {{43, 43, 1130}, {45, 45, 1131}, {48, 48, 1132}, {49, 49, 1133}, {50, 50, 1134}, {51, 51, 1135}, {52, 52, 1136}, {53, 53, 1137}, {54, 54, 1138}, {55, 55, 1139}, {56, 56, 1140}, {57, 57, 1141}, },
            {{48, 70, -738}, {95, 102, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {{46, 112, -738}, },
            {},
            {{43, 57, -981}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{46, 108, -760}, },
            {{48, 57, -760}, {95, 95, 997}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{46, 108, -779}, },
            {{48, 57, -779}, {95, 95, 1008}, },
            {},
            {{36, 113, -600}, {114, 114, 1142}, {115, 65500, -59}, },
            {{36, 113, -600}, {114, 114, 1143}, {115, 65500, -59}, },
            {{36, 100, -47}, {101, 101, 1144}, {102, 65500, -57}, },
            {{36, 106, -824}, {107, 107, 1145}, {108, 65500, -824}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 103, -58}, {104, 104, 1146}, {105, 65500, -61}, },
            {{36, 65500, -10}, },
            {{36, 114, -582}, {115, 115, 1147}, {116, 65500, -44}, },
            {{36, 110, -45}, {111, 111, 1148}, {112, 65500, -46}, },
            {{36, 115, -586}, {116, 116, 1149}, {117, 65500, -586}, },
            {{36, 104, -612}, {105, 105, 1150}, {106, 65500, -618}, },
            {{36, 116, -592}, {117, 117, 1151}, {118, 65500, -55}, },
            {{36, 107, -48}, {108, 108, 1152}, {109, 65500, -597}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -586}, {116, 116, 1153}, {117, 65500, -586}, },
            {{36, 109, -598}, {110, 110, 1154}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1155}, {102, 65500, -57}, },
            {{36, 107, -48}, {108, 108, 1156}, {109, 65500, -597}, },
            {{36, 115, -586}, {116, 116, 1157}, {117, 65500, -586}, },
            {{36, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1158}, {109, 65500, -597}, },
            {{36, 100, -47}, {101, 101, 1159}, {102, 65500, -57}, },
            {{36, 113, -600}, {114, 114, 1160}, {115, 65500, -59}, },
            {{36, 98, -610}, {99, 99, 1161}, {100, 65500, -610}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1162}, {98, 65500, -51}, },
            {{36, 113, -600}, {114, 114, 1163}, {115, 65500, -59}, },
            {{36, 65500, -10}, },
            {{36, 117, -826}, {118, 118, 1164}, {119, 65500, -826}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1165}, {98, 65500, -51}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1166}, {98, 65500, -51}, },
            {{36, 100, -47}, {101, 101, 1167}, {102, 65500, -57}, },
            {{36, 104, -612}, {105, 105, 1168}, {106, 65500, -618}, },
            {{36, 104, -612}, {105, 105, 1169}, {106, 65500, -618}, },
            {{36, 100, -47}, {101, 101, 1170}, {102, 104, 288}, {105, 105, 1171}, {106, 65500, -618}, },
            {{36, 113, -600}, {114, 114, 1172}, {115, 65500, -59}, },
            {{36, 115, -586}, {116, 116, 1173}, {117, 65500, -586}, },
            {{36, 104, -612}, {105, 105, 1174}, {106, 65500, -618}, },
            {{36, 98, -610}, {99, 99, 1175}, {100, 65500, -610}, },
            {{36, 113, -600}, {114, 114, 1176}, {115, 65500, -59}, },
            {{36, 98, -610}, {99, 99, 1177}, {100, 65500, -610}, },
            {{36, 103, -58}, {104, 104, 1178}, {105, 65500, -61}, },
            {{36, 65500, -10}, },
            {{36, 118, -608}, {119, 119, 1179}, {120, 65500, -608}, },
            {{36, 114, -582}, {115, 115, 1180}, {116, 65500, -44}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -586}, {116, 116, 1181}, {117, 65500, -586}, },
            {{36, 100, -47}, {101, 101, 1182}, {102, 65500, -57}, },
            {{101, 101, 1183}, },
            {{111, 111, 1184}, },
            {{99, 99, 1185}, },
            {{103, 103, 1186}, },
            {{98, 98, 1187}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{39, 39, 864}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 102, -885}, },
            {{48, 57, -885}, {95, 95, 1094}, },
            {{0, 65535, -895}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 102, -911}, },
            {{48, 57, -911}, {95, 95, 1106}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 70, -941}, {95, 102, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 112, -941}, },
            {{48, 57, -981}, },
            {{48, 57, -981}, },
            {{48, 48, 1188}, {49, 49, 1189}, {50, 50, 1190}, {51, 51, 1191}, {52, 52, 1192}, {53, 53, 1193}, {54, 54, 1194}, {55, 55, 1195}, {56, 56, 1196}, {57, 57, 1197}, {68, 68, 1198}, {70, 70, 1199}, {95, 95, 1200}, {100, 100, 1201}, {102, 102, 1202}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{36, 95, -10}, {97, 97, 1203}, {98, 65500, -51}, },
            {{36, 115, -586}, {116, 116, 1204}, {117, 65500, -586}, },
            {{36, 95, -10}, {97, 97, 1205}, {98, 65500, -51}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -598}, {110, 110, 1206}, {111, 65500, -52}, },
            {{36, 65500, -10}, },
            {{36, 109, -598}, {110, 110, 1207}, {111, 65500, -52}, },
            {{36, 107, -48}, {108, 108, 1208}, {109, 65500, -597}, },
            {{36, 100, -47}, {101, 101, 1209}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 99, -605}, {100, 100, 1210}, {101, 65500, -814}, },
            {{36, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1211}, {109, 65500, -597}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1212}, {102, 65500, -57}, },
            {{36, 108, -590}, {109, 109, 1213}, {110, 65500, -806}, },
            {{36, 115, -586}, {116, 116, 1214}, {117, 65500, -586}, },
            {{36, 95, -10}, {97, 97, 1215}, {98, 65500, -51}, },
            {{36, 109, -598}, {110, 110, 1216}, {111, 65500, -52}, },
            {{36, 101, -52}, {102, 102, 1217}, {103, 65500, -591}, },
            {{36, 100, -47}, {101, 101, 1218}, {102, 65500, -57}, },
            {{36, 102, -820}, {103, 103, 1219}, {104, 65500, -820}, },
            {{36, 115, -586}, {116, 116, 1220}, {117, 65500, -586}, },
            {{36, 98, -610}, {99, 99, 1221}, {100, 65500, -610}, },
            {{36, 99, -605}, {100, 100, 1222}, {101, 65500, -814}, },
            {{36, 98, -610}, {99, 99, 1223}, {100, 65500, -610}, },
            {{36, 114, -582}, {115, 115, 1224}, {116, 65500, -44}, },
            {{36, 113, -600}, {114, 114, 1225}, {115, 65500, -59}, },
            {{36, 109, -598}, {110, 110, 1226}, {111, 65500, -52}, },
            {{36, 65500, -10}, },
            {{36, 98, -610}, {99, 99, 1227}, {100, 65500, -610}, },
            {{36, 115, -586}, {116, 116, 1228}, {117, 65500, -586}, },
            {{36, 65500, -10}, },
            {{36, 103, -58}, {104, 104, 1229}, {105, 65500, -61}, },
            {{36, 113, -600}, {114, 114, 1230}, {115, 65500, -59}, },
            {{36, 114, -582}, {115, 115, 1231}, {116, 65500, -44}, },
            {{36, 104, -612}, {105, 105, 1232}, {106, 65500, -618}, },
            {{36, 104, -612}, {105, 105, 1233}, {106, 65500, -618}, },
            {{36, 65500, -10}, },
            {{99, 99, 1234}, },
            {{110, 110, 1235}, },
            {{114, 114, 1236}, },
            {{101, 101, 1237}, },
            {{115, 115, 1238}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {{48, 102, -1134}, },
            {},
            {},
            {{48, 57, -1134}, {95, 95, 1200}, },
            {},
            {},
            {{36, 98, -610}, {99, 99, 1239}, {100, 65500, -610}, },
            {{36, 65500, -10}, },
            {{36, 109, -598}, {110, 110, 1240}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1241}, {102, 65500, -57}, },
            {{36, 116, -592}, {117, 117, 1242}, {118, 65500, -55}, },
            {{36, 115, -586}, {116, 116, 1243}, {117, 65500, -586}, },
            {{36, 65500, -10}, },
            {{36, 114, -582}, {115, 115, 1244}, {116, 65500, -44}, },
            {{36, 95, -10}, {97, 120, 288}, {121, 121, 1245}, {122, 65500, -45}, },
            {{36, 113, -600}, {114, 114, 1246}, {115, 65500, -59}, },
            {{36, 100, -47}, {101, 101, 1247}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 115, -586}, {116, 116, 1248}, {117, 65500, -586}, },
            {{36, 98, -610}, {99, 99, 1249}, {100, 65500, -610}, },
            {{36, 95, -10}, {97, 97, 1250}, {98, 65500, -51}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1251}, {102, 65500, -57}, },
            {{36, 100, -47}, {101, 101, 1252}, {102, 65500, -57}, },
            {{36, 115, -586}, {116, 116, 1253}, {117, 65500, -586}, },
            {{36, 100, -47}, {101, 101, 1254}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 115, -586}, {116, 116, 1255}, {117, 65500, -586}, },
            {{36, 100, -47}, {101, 101, 1256}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 101, -52}, {102, 102, 1257}, {103, 65500, -591}, },
            {{36, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 1258}, {112, 65500, -46}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1259}, {102, 65500, -57}, },
            {{36, 107, -48}, {108, 108, 1260}, {109, 65500, -597}, },
            {{116, 116, 1261}, },
            {{110, 110, 1262}, },
            {{105, 105, 1263}, },
            {{114, 114, 1264}, },
            {{99, 99, 1265}, },
            {{36, 115, -586}, {116, 116, 1266}, {117, 65500, -586}, },
            {{36, 65500, -10}, },
            {{36, 109, -598}, {110, 110, 1267}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1268}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -598}, {110, 110, 1269}, {111, 65500, -52}, },
            {{36, 104, -612}, {105, 105, 1270}, {106, 65500, -618}, },
            {{36, 100, -47}, {101, 101, 1271}, {102, 65500, -57}, },
            {{36, 98, -610}, {99, 99, 1272}, {100, 65500, -610}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1273}, {102, 65500, -57}, },
            {{36, 114, -582}, {115, 115, 1274}, {116, 65500, -44}, },
            {{36, 65500, -10}, },
            {{36, 114, -582}, {115, 115, 1275}, {116, 65500, -44}, },
            {{36, 111, -604}, {112, 112, 1276}, {113, 65500, -604}, },
            {{36, 109, -598}, {110, 110, 1277}, {111, 65500, -52}, },
            {{36, 109, -598}, {110, 110, 1278}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1279}, {102, 65500, -57}, },
            {},
            {{101, 101, 1280}, },
            {{98, 98, 1281}, },
            {},
            {{114, 114, 1282}, },
            {{36, 65500, -10}, },
            {{36, 115, -586}, {116, 116, 1283}, {117, 65500, -586}, },
            {{36, 65500, -10}, },
            {{36, 115, -586}, {116, 116, 1284}, {117, 65500, -586}, },
            {{36, 110, -45}, {111, 111, 1285}, {112, 65500, -46}, },
            {{36, 110, -45}, {111, 111, 1286}, {112, 65500, -46}, },
            {{36, 100, -47}, {101, 101, 1287}, {102, 65500, -57}, },
            {{36, 99, -605}, {100, 100, 1288}, {101, 65500, -814}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 104, -612}, {105, 105, 1289}, {106, 65500, -618}, },
            {{36, 115, -586}, {116, 116, 1290}, {117, 65500, -586}, },
            {{36, 65500, -10}, },
            {{99, 99, 1291}, },
            {{101, 101, 1292}, },
            {{105, 105, 1293}, },
            {{36, 99, -605}, {100, 100, 1294}, {101, 65500, -814}, },
            {{36, 114, -582}, {115, 115, 1295}, {116, 65500, -44}, },
            {{36, 109, -598}, {110, 110, 1296}, {111, 65500, -52}, },
            {{36, 101, -52}, {102, 102, 1297}, {103, 65500, -591}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 121, 288}, {122, 122, 1298}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{116, 116, 1299}, },
            {},
            {{98, 98, 1300}, },
            {{36, 100, -47}, {101, 101, 1301}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1302}, {102, 65500, -57}, },
            {},
            {{101, 101, 1303}, },
            {{36, 101, -52}, {102, 102, 1304}, {103, 65500, -591}, },
            {{36, 99, -605}, {100, 100, 1305}, {101, 65500, -814}, },
            {},
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 123, 123, 123, 123, 123, 87, -1, 74, 106, 103, -1, 75, 76, 101, 99, 82, 100, 83, 102, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 90, 81, 85, 84, 86, 89, 122, 74, 79, 80, 105, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 77, 104, 78, 88, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 123, 94, -1, -1, -1, -1, -1, -1, 72, -1, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 117, 95, 114, -1, -1, 112, 97, 110, 98, 111, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 0, 113, 69, 68, 68, 68, 68, 68, 68, 68, 68, -1, -1, -1, 69, -1, 69, 68, -1, -1, -1, 69, -1, 69, 68, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, 107, 92, 91, 67, 93, 108, 116, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 13, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 22, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 115, 96, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 121, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 69, -1, 69, -1, 69, -1, -1, 0, 0, 0, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 69, 69, -1, 69, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, 68, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 118, 119, 109, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 21, 74, 74, 74, 74, 74, 74, 27, 74, 74, 31, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 47, 74, 74, 74, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 0, 0, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 68, 68, 68, -1, 68, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 69, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, -1, 68, 68, 68, 68, 68, 68, 68, -1, 68, 68, 68, 68, 68, 68, 68, 68, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, 120, 74, 74, 74, 74, 5, 6, 74, 8, 74, 74, 74, 74, 74, 74, 15, 16, 74, 74, 74, 74, 74, 23, 74, 74, 74, 74, 60, 74, 74, 29, 74, 73, 74, 53, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 43, 74, 74, 70, 48, 74, 74, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 74, 74, 74, 4, 7, 9, 74, 10, 74, 74, 74, 66, 74, 70, 18, 20, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 37, 74, 74, 40, 74, 74, 44, 74, 74, 50, -1, -1, -1, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 69, 69, 74, 2, 74, 74, 74, 74, 14, 74, 74, 52, 74, 25, 74, 74, 74, 30, 74, 74, 74, 74, 35, 74, 74, 36, 38, 74, 41, 74, 45, 74, 74, -1, -1, -1, -1, -1, 74, 3, 74, 74, 12, 17, 19, 51, 74, 74, 74, 74, 32, 33, 74, 74, 65, 74, 74, 74, 74, 74, 58, -1, -1, 61, -1, 1, 74, 11, 74, 74, 74, 74, 74, 63, 62, 39, 74, 74, 49, -1, -1, -1, 54, 74, 74, 74, 28, 34, 74, 46, -1, 56, -1, 74, 24, 64, 26, 74, 59, -1, 74, 74, 57, 55, 42, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
