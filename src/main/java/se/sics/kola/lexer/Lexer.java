/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.lexer;

import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackReader;
import se.sics.kola.node.EOF;
import se.sics.kola.node.InvalidToken;
import se.sics.kola.node.TAbstractKeyword;
import se.sics.kola.node.TAmp;
import se.sics.kola.node.TAmpAmp;
import se.sics.kola.node.TAmpAssign;
import se.sics.kola.node.TAssertKeyword;
import se.sics.kola.node.TAssign;
import se.sics.kola.node.TAt;
import se.sics.kola.node.TBar;
import se.sics.kola.node.TBarAssign;
import se.sics.kola.node.TBarBar;
import se.sics.kola.node.TBooleanKeyword;
import se.sics.kola.node.TBooleanLiteral;
import se.sics.kola.node.TBreakKeyword;
import se.sics.kola.node.TByteKeyword;
import se.sics.kola.node.TCaret;
import se.sics.kola.node.TCaretAssign;
import se.sics.kola.node.TCaseKeyword;
import se.sics.kola.node.TCatchKeyword;
import se.sics.kola.node.TCharKeyword;
import se.sics.kola.node.TCharacterLiteral;
import se.sics.kola.node.TClassKeyword;
import se.sics.kola.node.TColon;
import se.sics.kola.node.TComma;
import se.sics.kola.node.TComment;
import se.sics.kola.node.TComponentKeyword;
import se.sics.kola.node.TConnectKeyword;
import se.sics.kola.node.TConstKeyword;
import se.sics.kola.node.TContinueKeyword;
import se.sics.kola.node.TDefaultKeyword;
import se.sics.kola.node.TDefinitionKeyword;
import se.sics.kola.node.TDisconnectKeyword;
import se.sics.kola.node.TDoKeyword;
import se.sics.kola.node.TDot;
import se.sics.kola.node.TDotDotDot;
import se.sics.kola.node.TDoubleKeyword;
import se.sics.kola.node.TElseKeyword;
import se.sics.kola.node.TEmark;
import se.sics.kola.node.TEnumKeyword;
import se.sics.kola.node.TEq;
import se.sics.kola.node.TEventKeyword;
import se.sics.kola.node.TExtendsKeyword;
import se.sics.kola.node.TFinalKeyword;
import se.sics.kola.node.TFinallyKeyword;
import se.sics.kola.node.TFloatKeyword;
import se.sics.kola.node.TFloatingPointLiteral;
import se.sics.kola.node.TForKeyword;
import se.sics.kola.node.TGotoKeyword;
import se.sics.kola.node.TGt;
import se.sics.kola.node.TGteq;
import se.sics.kola.node.THandleKeyword;
import se.sics.kola.node.THandlerKeyword;
import se.sics.kola.node.TIdentifier;
import se.sics.kola.node.TIfKeyword;
import se.sics.kola.node.TImplementsKeyword;
import se.sics.kola.node.TImportKeyword;
import se.sics.kola.node.TIndicationKeyword;
import se.sics.kola.node.TInitKeyword;
import se.sics.kola.node.TInstanceofKeyword;
import se.sics.kola.node.TIntKeyword;
import se.sics.kola.node.TIntegerLiteral;
import se.sics.kola.node.TInterfaceKeyword;
import se.sics.kola.node.TLBkt;
import se.sics.kola.node.TLBrc;
import se.sics.kola.node.TLPar;
import se.sics.kola.node.TLongKeyword;
import se.sics.kola.node.TLt;
import se.sics.kola.node.TLteq;
import se.sics.kola.node.TMinus;
import se.sics.kola.node.TMinusAssign;
import se.sics.kola.node.TMinusMinus;
import se.sics.kola.node.TNativeKeyword;
import se.sics.kola.node.TNeq;
import se.sics.kola.node.TNewKeyword;
import se.sics.kola.node.TNullLiteral;
import se.sics.kola.node.TPackageKeyword;
import se.sics.kola.node.TPercent;
import se.sics.kola.node.TPercentAssign;
import se.sics.kola.node.TPlus;
import se.sics.kola.node.TPlusAssign;
import se.sics.kola.node.TPlusPlus;
import se.sics.kola.node.TPortKeyword;
import se.sics.kola.node.TPrivateKeyword;
import se.sics.kola.node.TProtectedKeyword;
import se.sics.kola.node.TProvidesKeyword;
import se.sics.kola.node.TPublicKeyword;
import se.sics.kola.node.TQmark;
import se.sics.kola.node.TRArrow;
import se.sics.kola.node.TRBkt;
import se.sics.kola.node.TRBrc;
import se.sics.kola.node.TRPar;
import se.sics.kola.node.TRequestKeyword;
import se.sics.kola.node.TRequiresKeyword;
import se.sics.kola.node.TReturnKeyword;
import se.sics.kola.node.TSemi;
import se.sics.kola.node.TShl;
import se.sics.kola.node.TShlAssign;
import se.sics.kola.node.TShortKeyword;
import se.sics.kola.node.TShr;
import se.sics.kola.node.TShrAssign;
import se.sics.kola.node.TSlash;
import se.sics.kola.node.TSlashAssign;
import se.sics.kola.node.TStar;
import se.sics.kola.node.TStarAssign;
import se.sics.kola.node.TStaticKeyword;
import se.sics.kola.node.TStrictfpKeyword;
import se.sics.kola.node.TStringLiteral;
import se.sics.kola.node.TSubscribeKeyword;
import se.sics.kola.node.TSuperKeyword;
import se.sics.kola.node.TSwitchKeyword;
import se.sics.kola.node.TSynchronizedKeyword;
import se.sics.kola.node.TThisKeyword;
import se.sics.kola.node.TThrowKeyword;
import se.sics.kola.node.TThrowsKeyword;
import se.sics.kola.node.TTilde;
import se.sics.kola.node.TTransientKeyword;
import se.sics.kola.node.TTriggerKeyword;
import se.sics.kola.node.TTryKeyword;
import se.sics.kola.node.TUnsubscribeKeyword;
import se.sics.kola.node.TUshr;
import se.sics.kola.node.TUshrAssign;
import se.sics.kola.node.TVoidKeyword;
import se.sics.kola.node.TVolatileKeyword;
import se.sics.kola.node.TWhileKeyword;
import se.sics.kola.node.TWhiteSpaces;
import se.sics.kola.node.Token;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 65:
                        {
                            @SuppressWarnings("hiding") Token token = new65(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 66:
                        {
                            @SuppressWarnings("hiding") Token token = new66(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 67:
                        {
                            @SuppressWarnings("hiding") Token token = new67(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 68:
                        {
                            @SuppressWarnings("hiding") Token token = new68(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 69:
                        {
                            @SuppressWarnings("hiding") Token token = new69(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 70:
                        {
                            @SuppressWarnings("hiding") Token token = new70(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 71:
                        {
                            @SuppressWarnings("hiding") Token token = new71(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 72:
                        {
                            @SuppressWarnings("hiding") Token token = new72(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 73:
                        {
                            @SuppressWarnings("hiding") Token token = new73(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 74:
                        {
                            @SuppressWarnings("hiding") Token token = new74(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 75:
                        {
                            @SuppressWarnings("hiding") Token token = new75(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 76:
                        {
                            @SuppressWarnings("hiding") Token token = new76(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 77:
                        {
                            @SuppressWarnings("hiding") Token token = new77(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 78:
                        {
                            @SuppressWarnings("hiding") Token token = new78(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 79:
                        {
                            @SuppressWarnings("hiding") Token token = new79(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 80:
                        {
                            @SuppressWarnings("hiding") Token token = new80(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 81:
                        {
                            @SuppressWarnings("hiding") Token token = new81(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 82:
                        {
                            @SuppressWarnings("hiding") Token token = new82(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 83:
                        {
                            @SuppressWarnings("hiding") Token token = new83(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 84:
                        {
                            @SuppressWarnings("hiding") Token token = new84(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 85:
                        {
                            @SuppressWarnings("hiding") Token token = new85(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 86:
                        {
                            @SuppressWarnings("hiding") Token token = new86(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 87:
                        {
                            @SuppressWarnings("hiding") Token token = new87(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 88:
                        {
                            @SuppressWarnings("hiding") Token token = new88(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 89:
                        {
                            @SuppressWarnings("hiding") Token token = new89(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 90:
                        {
                            @SuppressWarnings("hiding") Token token = new90(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 91:
                        {
                            @SuppressWarnings("hiding") Token token = new91(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 92:
                        {
                            @SuppressWarnings("hiding") Token token = new92(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 93:
                        {
                            @SuppressWarnings("hiding") Token token = new93(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 94:
                        {
                            @SuppressWarnings("hiding") Token token = new94(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 95:
                        {
                            @SuppressWarnings("hiding") Token token = new95(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 96:
                        {
                            @SuppressWarnings("hiding") Token token = new96(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 97:
                        {
                            @SuppressWarnings("hiding") Token token = new97(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 98:
                        {
                            @SuppressWarnings("hiding") Token token = new98(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 99:
                        {
                            @SuppressWarnings("hiding") Token token = new99(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 100:
                        {
                            @SuppressWarnings("hiding") Token token = new100(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 101:
                        {
                            @SuppressWarnings("hiding") Token token = new101(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 102:
                        {
                            @SuppressWarnings("hiding") Token token = new102(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 103:
                        {
                            @SuppressWarnings("hiding") Token token = new103(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 104:
                        {
                            @SuppressWarnings("hiding") Token token = new104(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 105:
                        {
                            @SuppressWarnings("hiding") Token token = new105(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 106:
                        {
                            @SuppressWarnings("hiding") Token token = new106(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 107:
                        {
                            @SuppressWarnings("hiding") Token token = new107(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 108:
                        {
                            @SuppressWarnings("hiding") Token token = new108(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 109:
                        {
                            @SuppressWarnings("hiding") Token token = new109(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 110:
                        {
                            @SuppressWarnings("hiding") Token token = new110(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 111:
                        {
                            @SuppressWarnings("hiding") Token token = new111(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 112:
                        {
                            @SuppressWarnings("hiding") Token token = new112(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 113:
                        {
                            @SuppressWarnings("hiding") Token token = new113(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 114:
                        {
                            @SuppressWarnings("hiding") Token token = new114(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 115:
                        {
                            @SuppressWarnings("hiding") Token token = new115(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 116:
                        {
                            @SuppressWarnings("hiding") Token token = new116(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 117:
                        {
                            @SuppressWarnings("hiding") Token token = new117(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 118:
                        {
                            @SuppressWarnings("hiding") Token token = new118(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 119:
                        {
                            @SuppressWarnings("hiding") Token token = new119(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 120:
                        {
                            @SuppressWarnings("hiding") Token token = new120(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 121:
                        {
                            @SuppressWarnings("hiding") Token token = new121(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 122:
                        {
                            @SuppressWarnings("hiding") Token token = new122(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 123:
                        {
                            @SuppressWarnings("hiding") Token token = new123(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbstractKeyword(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssertKeyword(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleanKeyword(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreakKeyword(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TByteKeyword(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaseKeyword(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCatchKeyword(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharKeyword(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TClassKeyword(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstKeyword(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContinueKeyword(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDefaultKeyword(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoKeyword(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDoubleKeyword(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElseKeyword(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnumKeyword(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TExtendsKeyword(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinalKeyword(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinallyKeyword(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatKeyword(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TForKeyword(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIfKeyword(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGotoKeyword(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImplementsKeyword(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImportKeyword(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInstanceofKeyword(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntKeyword(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInterfaceKeyword(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLongKeyword(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNativeKeyword(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNewKeyword(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPackageKeyword(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrivateKeyword(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProtectedKeyword(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPublicKeyword(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturnKeyword(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShortKeyword(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStaticKeyword(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStrictfpKeyword(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSuperKeyword(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSwitchKeyword(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSynchronizedKeyword(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThisKeyword(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThrowKeyword(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThrowsKeyword(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTransientKeyword(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTryKeyword(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVoidKeyword(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVolatileKeyword(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhileKeyword(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDefinitionKeyword(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THandlerKeyword(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THandleKeyword(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPortKeyword(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComponentKeyword(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSubscribeKeyword(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUnsubscribeKeyword(line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConnectKeyword(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDisconnectKeyword(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInitKeyword(line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTriggerKeyword(line, pos); }
    Token new62(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRequiresKeyword(line, pos); }
    Token new63(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProvidesKeyword(line, pos); }
    Token new64(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIndicationKeyword(line, pos); }
    Token new65(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRequestKeyword(line, pos); }
    Token new66(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEventKeyword(line, pos); }
    Token new67(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRArrow(line, pos); }
    Token new68(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntegerLiteral(text, line, pos); }
    Token new69(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatingPointLiteral(text, line, pos); }
    Token new70(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBooleanLiteral(text, line, pos); }
    Token new71(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharacterLiteral(text, line, pos); }
    Token new72(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(text, line, pos); }
    Token new73(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNullLiteral(line, pos); }
    Token new74(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new75(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new76(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new77(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrc(line, pos); }
    Token new78(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrc(line, pos); }
    Token new79(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBkt(line, pos); }
    Token new80(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBkt(line, pos); }
    Token new81(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemi(line, pos); }
    Token new82(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new83(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new84(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new85(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new86(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new87(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEmark(line, pos); }
    Token new88(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTilde(line, pos); }
    Token new89(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQmark(line, pos); }
    Token new90(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new91(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new92(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLteq(line, pos); }
    Token new93(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGteq(line, pos); }
    Token new94(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNeq(line, pos); }
    Token new95(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmpAmp(line, pos); }
    Token new96(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarBar(line, pos); }
    Token new97(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusPlus(line, pos); }
    Token new98(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusMinus(line, pos); }
    Token new99(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new100(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new101(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new102(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }
    Token new103(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmp(line, pos); }
    Token new104(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBar(line, pos); }
    Token new105(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaret(line, pos); }
    Token new106(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPercent(line, pos); }
    Token new107(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShl(line, pos); }
    Token new108(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShr(line, pos); }
    Token new109(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUshr(line, pos); }
    Token new110(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusAssign(line, pos); }
    Token new111(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusAssign(line, pos); }
    Token new112(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStarAssign(line, pos); }
    Token new113(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlashAssign(line, pos); }
    Token new114(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmpAssign(line, pos); }
    Token new115(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarAssign(line, pos); }
    Token new116(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaretAssign(line, pos); }
    Token new117(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPercentAssign(line, pos); }
    Token new118(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShlAssign(line, pos); }
    Token new119(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShrAssign(line, pos); }
    Token new120(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUshrAssign(line, pos); }
    Token new121(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDotDotDot(line, pos); }
    Token new122(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAt(line, pos); }
    Token new123(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpaces(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {36, 36, 8}, {37, 37, 9}, {38, 38, 10}, {39, 39, 11}, {40, 40, 12}, {41, 41, 13}, {42, 42, 14}, {43, 43, 15}, {44, 44, 16}, {45, 45, 17}, {46, 46, 18}, {47, 47, 19}, {48, 48, 20}, {49, 49, 21}, {50, 50, 22}, {51, 51, 23}, {52, 52, 24}, {53, 53, 25}, {54, 54, 26}, {55, 55, 27}, {56, 56, 28}, {57, 57, 29}, {58, 58, 30}, {59, 59, 31}, {60, 60, 32}, {61, 61, 33}, {62, 62, 34}, {63, 63, 35}, {64, 64, 36}, {65, 90, 37}, {91, 91, 38}, {93, 93, 39}, {94, 94, 40}, {95, 95, 41}, {97, 97, 42}, {98, 98, 43}, {99, 99, 44}, {100, 100, 45}, {101, 101, 46}, {102, 102, 47}, {103, 103, 48}, {104, 104, 49}, {105, 105, 50}, {106, 107, 51}, {108, 108, 52}, {109, 109, 51}, {110, 110, 53}, {111, 111, 51}, {112, 112, 54}, {113, 113, 51}, {114, 114, 55}, {115, 115, 56}, {116, 116, 57}, {117, 117, 58}, {118, 118, 59}, {119, 119, 60}, {120, 122, 51}, {123, 123, 61}, {124, 124, 62}, {125, 125, 63}, {126, 126, 64}, {170, 170, 65}, {181, 181, 66}, {186, 186, 67}, {192, 214, 68}, {216, 246, 69}, {248, 501, 70}, {506, 535, 71}, {592, 680, 72}, {688, 696, 73}, {699, 705, 74}, {720, 721, 75}, {736, 740, 76}, {890, 890, 77}, {902, 902, 78}, {904, 906, 79}, {908, 908, 80}, {910, 929, 81}, {931, 974, 82}, {976, 982, 83}, {986, 986, 84}, {988, 988, 85}, {990, 990, 86}, {992, 992, 87}, {994, 1011, 88}, {1025, 1036, 89}, {1038, 1103, 90}, {1105, 1116, 91}, {1118, 1153, 92}, {1168, 1220, 93}, {1223, 1224, 94}, {1227, 1228, 95}, {1232, 1259, 96}, {1262, 1269, 97}, {1272, 1273, 98}, {1329, 1366, 99}, {1369, 1369, 100}, {1377, 1415, 101}, {1488, 1514, 102}, {1520, 1522, 103}, {1569, 1594, 104}, {1600, 1610, 105}, {1649, 1719, 106}, {1722, 1726, 107}, {1728, 1742, 108}, {1744, 1747, 109}, {1749, 1749, 110}, {1765, 1766, 111}, {2309, 2361, 112}, {2365, 2365, 113}, {2392, 2401, 114}, {2437, 2444, 115}, {2447, 2448, 116}, {2451, 2472, 117}, {2474, 2480, 118}, {2482, 2482, 119}, {2486, 2489, 120}, {2524, 2525, 121}, {2527, 2529, 122}, {2544, 2545, 123}, {2565, 2570, 124}, {2575, 2576, 125}, {2579, 2600, 126}, {2602, 2608, 127}, {2610, 2611, 128}, {2613, 2614, 129}, {2616, 2617, 130}, {2649, 2652, 131}, {2654, 2654, 132}, {2674, 2676, 133}, {2693, 2699, 134}, {2701, 2701, 135}, {2703, 2705, 136}, {2707, 2728, 137}, {2730, 2736, 138}, {2738, 2739, 139}, {2741, 2745, 140}, {2749, 2749, 141}, {2784, 2784, 142}, {2821, 2828, 143}, {2831, 2832, 144}, {2835, 2856, 145}, {2858, 2864, 146}, {2866, 2867, 147}, {2870, 2873, 148}, {2877, 2877, 149}, {2908, 2909, 150}, {2911, 2913, 151}, {2949, 2954, 152}, {2958, 2960, 153}, {2962, 2965, 154}, {2969, 2970, 155}, {2972, 2972, 156}, {2974, 2975, 157}, {2979, 2980, 158}, {2984, 2986, 159}, {2990, 2997, 160}, {2999, 3001, 161}, {3077, 3084, 162}, {3086, 3088, 163}, {3090, 3112, 164}, {3114, 3123, 165}, {3125, 3129, 166}, {3168, 3169, 167}, {3205, 3212, 168}, {3214, 3216, 169}, {3218, 3240, 170}, {3242, 3251, 171}, {3253, 3257, 172}, {3294, 3294, 173}, {3296, 3297, 174}, {3333, 3340, 175}, {3342, 3344, 176}, {3346, 3368, 177}, {3370, 3385, 178}, {3424, 3425, 179}, {3585, 3630, 180}, {3632, 3632, 181}, {3634, 3635, 182}, {3648, 3654, 183}, {3713, 3714, 184}, {3716, 3716, 185}, {3719, 3720, 186}, {3722, 3722, 187}, {3725, 3725, 188}, {3732, 3735, 189}, {3737, 3743, 190}, {3745, 3747, 191}, {3749, 3749, 192}, {3751, 3751, 193}, {3754, 3755, 194}, {3757, 3758, 195}, {3760, 3760, 196}, {3762, 3763, 197}, {3773, 3773, 198}, {3776, 3780, 199}, {3782, 3782, 200}, {3804, 3805, 201}, {3904, 3911, 202}, {3913, 3945, 203}, {4256, 4293, 204}, {4304, 4342, 205}, {4352, 4441, 206}, {4447, 4514, 207}, {4520, 4601, 208}, {7680, 7835, 209}, {7840, 7929, 210}, {7936, 7957, 211}, {7960, 7965, 212}, {7968, 8005, 213}, {8008, 8013, 214}, {8016, 8023, 215}, {8025, 8025, 216}, {8027, 8027, 217}, {8029, 8029, 218}, {8031, 8061, 219}, {8064, 8116, 220}, {8118, 8124, 221}, {8126, 8126, 222}, {8130, 8132, 223}, {8134, 8140, 224}, {8144, 8147, 225}, {8150, 8155, 226}, {8160, 8172, 227}, {8178, 8180, 228}, {8182, 8188, 229}, {8319, 8319, 230}, {8450, 8450, 231}, {8455, 8455, 232}, {8458, 8467, 233}, {8469, 8469, 234}, {8472, 8477, 235}, {8484, 8484, 236}, {8486, 8486, 237}, {8488, 8488, 238}, {8490, 8497, 239}, {8499, 8504, 240}, {12293, 12293, 241}, {12337, 12341, 242}, {12353, 12436, 243}, {12443, 12446, 244}, {12449, 12538, 245}, {12540, 12542, 246}, {12549, 12588, 247}, {12593, 12686, 248}, {19968, 40869, 249}, {44032, 55203, 250}, {63744, 64045, 251}, {64256, 64262, 252}, {64275, 64279, 253}, {64287, 64296, 254}, {64298, 64310, 255}, {64312, 64316, 256}, {64318, 64318, 257}, {64320, 64321, 258}, {64323, 64324, 259}, {64326, 64433, 260}, {64467, 64829, 261}, {64848, 64911, 262}, {64914, 64967, 263}, {65008, 65019, 264}, {65136, 65138, 265}, {65140, 65140, 266}, {65142, 65276, 267}, {65313, 65338, 268}, {65345, 65370, 269}, {65382, 65470, 270}, {65474, 65479, 271}, {65482, 65487, 272}, {65490, 65495, 273}, {65498, 65500, 274}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 275}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 276}, },
            {{0, 9, 277}, {11, 12, 277}, {14, 33, 277}, {34, 34, 278}, {35, 91, 277}, {92, 92, 279}, {93, 65535, 277}, },
            {{36, 36, 280}, {48, 57, 281}, {65, 90, 282}, {95, 95, 283}, {97, 122, 284}, {170, 170, 285}, {181, 181, 286}, {186, 186, 287}, {192, 214, 288}, {216, 246, 289}, {248, 501, 290}, {506, 535, 291}, {592, 680, 292}, {688, 696, 293}, {699, 705, 294}, {720, 721, 295}, {736, 740, 296}, {890, 890, 297}, {902, 902, 298}, {904, 906, 299}, {908, 908, 300}, {910, 929, 301}, {931, 974, 302}, {976, 982, 303}, {986, 986, 304}, {988, 988, 305}, {990, 990, 306}, {992, 992, 307}, {994, 1011, 308}, {1025, 1036, 309}, {1038, 1103, 310}, {1105, 1116, 311}, {1118, 1153, 312}, {1168, 1220, 313}, {1223, 1224, 314}, {1227, 1228, 315}, {1232, 1259, 316}, {1262, 1269, 317}, {1272, 1273, 318}, {1329, 1366, 319}, {1369, 1369, 320}, {1377, 1415, 321}, {1488, 1514, 322}, {1520, 1522, 323}, {1569, 1594, 324}, {1600, 1610, 325}, {1632, 1641, 326}, {1649, 1719, 327}, {1722, 1726, 328}, {1728, 1742, 329}, {1744, 1747, 330}, {1749, 1749, 331}, {1765, 1766, 332}, {1776, 1785, 333}, {2309, 2361, 334}, {2365, 2365, 335}, {2392, 2401, 336}, {2406, 2415, 337}, {2437, 2444, 338}, {2447, 2448, 339}, {2451, 2472, 340}, {2474, 2480, 341}, {2482, 2482, 342}, {2486, 2489, 343}, {2524, 2525, 344}, {2527, 2529, 345}, {2534, 2543, 346}, {2544, 2545, 347}, {2565, 2570, 348}, {2575, 2576, 349}, {2579, 2600, 350}, {2602, 2608, 351}, {2610, 2611, 352}, {2613, 2614, 353}, {2616, 2617, 354}, {2649, 2652, 355}, {2654, 2654, 356}, {2662, 2671, 357}, {2674, 2676, 358}, {2693, 2699, 359}, {2701, 2701, 360}, {2703, 2705, 361}, {2707, 2728, 362}, {2730, 2736, 363}, {2738, 2739, 364}, {2741, 2745, 365}, {2749, 2749, 366}, {2784, 2784, 367}, {2790, 2799, 368}, {2821, 2828, 369}, {2831, 2832, 370}, {2835, 2856, 371}, {2858, 2864, 372}, {2866, 2867, 373}, {2870, 2873, 374}, {2877, 2877, 375}, {2908, 2909, 376}, {2911, 2913, 377}, {2918, 2927, 378}, {2949, 2954, 379}, {2958, 2960, 380}, {2962, 2965, 381}, {2969, 2970, 382}, {2972, 2972, 383}, {2974, 2975, 384}, {2979, 2980, 385}, {2984, 2986, 386}, {2990, 2997, 387}, {2999, 3001, 388}, {3047, 3055, 389}, {3077, 3084, 390}, {3086, 3088, 391}, {3090, 3112, 392}, {3114, 3123, 393}, {3125, 3129, 394}, {3168, 3169, 395}, {3174, 3183, 396}, {3205, 3212, 397}, {3214, 3216, 398}, {3218, 3240, 399}, {3242, 3251, 400}, {3253, 3257, 401}, {3294, 3294, 402}, {3296, 3297, 403}, {3302, 3311, 404}, {3333, 3340, 405}, {3342, 3344, 406}, {3346, 3368, 407}, {3370, 3385, 408}, {3424, 3425, 409}, {3430, 3439, 410}, {3585, 3630, 411}, {3632, 3632, 412}, {3634, 3635, 413}, {3648, 3654, 414}, {3664, 3673, 415}, {3713, 3714, 416}, {3716, 3716, 417}, {3719, 3720, 418}, {3722, 3722, 419}, {3725, 3725, 420}, {3732, 3735, 421}, {3737, 3743, 422}, {3745, 3747, 423}, {3749, 3749, 424}, {3751, 3751, 425}, {3754, 3755, 426}, {3757, 3758, 427}, {3760, 3760, 428}, {3762, 3763, 429}, {3773, 3773, 430}, {3776, 3780, 431}, {3782, 3782, 432}, {3792, 3801, 433}, {3804, 3805, 434}, {3872, 3881, 435}, {3904, 3911, 436}, {3913, 3945, 437}, {4256, 4293, 438}, {4304, 4342, 439}, {4352, 4441, 440}, {4447, 4514, 441}, {4520, 4601, 442}, {7680, 7835, 443}, {7840, 7929, 444}, {7936, 7957, 445}, {7960, 7965, 446}, {7968, 8005, 447}, {8008, 8013, 448}, {8016, 8023, 449}, {8025, 8025, 450}, {8027, 8027, 451}, {8029, 8029, 452}, {8031, 8061, 453}, {8064, 8116, 454}, {8118, 8124, 455}, {8126, 8126, 456}, {8130, 8132, 457}, {8134, 8140, 458}, {8144, 8147, 459}, {8150, 8155, 460}, {8160, 8172, 461}, {8178, 8180, 462}, {8182, 8188, 463}, {8319, 8319, 464}, {8450, 8450, 465}, {8455, 8455, 466}, {8458, 8467, 467}, {8469, 8469, 468}, {8472, 8477, 469}, {8484, 8484, 470}, {8486, 8486, 471}, {8488, 8488, 472}, {8490, 8497, 473}, {8499, 8504, 474}, {12293, 12293, 475}, {12337, 12341, 476}, {12353, 12436, 477}, {12443, 12446, 478}, {12449, 12538, 479}, {12540, 12542, 480}, {12549, 12588, 481}, {12593, 12686, 482}, {19968, 40869, 483}, {44032, 55203, 484}, {63744, 64045, 485}, {64256, 64262, 486}, {64275, 64279, 487}, {64287, 64296, 488}, {64298, 64310, 489}, {64312, 64316, 490}, {64318, 64318, 491}, {64320, 64321, 492}, {64323, 64324, 493}, {64326, 64433, 494}, {64467, 64829, 495}, {64848, 64911, 496}, {64914, 64967, 497}, {65008, 65019, 498}, {65136, 65138, 499}, {65140, 65140, 500}, {65142, 65276, 501}, {65296, 65305, 502}, {65313, 65338, 503}, {65345, 65370, 504}, {65382, 65470, 505}, {65474, 65479, 506}, {65482, 65487, 507}, {65490, 65495, 508}, {65498, 65500, 509}, },
            {{61, 61, 510}, },
            {{38, 38, 511}, {61, 61, 512}, },
            {{0, 9, 513}, {11, 12, 513}, {14, 38, 513}, {40, 91, 513}, {92, 92, 514}, {93, 65535, 513}, },
            {},
            {},
            {{61, 61, 515}, },
            {{43, 43, 516}, {61, 61, 517}, },
            {},
            {{45, 45, 518}, {61, 61, 519}, {62, 62, 520}, },
            {{46, 46, 521}, {48, 48, 522}, {49, 49, 523}, {50, 50, 524}, {51, 51, 525}, {52, 52, 526}, {53, 53, 527}, {54, 54, 528}, {55, 55, 529}, {56, 56, 530}, {57, 57, 531}, },
            {{42, 42, 532}, {47, 47, 533}, {61, 61, 534}, },
            {{46, 46, 535}, {48, 48, 536}, {49, 49, 537}, {50, 50, 538}, {51, 51, 539}, {52, 52, 540}, {53, 53, 541}, {54, 54, 542}, {55, 55, 543}, {56, 56, 544}, {57, 57, 545}, {66, 66, 546}, {68, 68, 547}, {69, 69, 548}, {70, 70, 549}, {76, 76, 550}, {88, 88, 551}, {95, 95, 552}, {98, 98, 553}, {100, 100, 554}, {101, 101, 555}, {102, 102, 556}, {108, 108, 557}, {120, 120, 558}, },
            {{46, 46, 535}, {48, 48, 559}, {49, 49, 560}, {50, 50, 561}, {51, 51, 562}, {52, 52, 563}, {53, 53, 564}, {54, 54, 565}, {55, 55, 566}, {56, 56, 567}, {57, 57, 568}, {68, 76, -22}, {95, 95, 569}, {100, 108, -22}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {{46, 108, -23}, },
            {},
            {},
            {{60, 60, 570}, {61, 61, 571}, },
            {{61, 61, 572}, },
            {{61, 61, 573}, {62, 62, 574}, },
            {},
            {},
            {{36, 65500, -10}, },
            {},
            {},
            {{61, 61, 575}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 284}, {98, 98, 576}, {99, 114, 284}, {115, 115, 577}, {116, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 110, 284}, {111, 111, 578}, {112, 113, 284}, {114, 114, 579}, {115, 120, 284}, {121, 121, 580}, {122, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 581}, {98, 103, 284}, {104, 104, 582}, {105, 107, 284}, {108, 108, 583}, {109, 110, 284}, {111, 111, 584}, {112, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 100, 284}, {101, 101, 585}, {102, 104, 284}, {105, 105, 586}, {106, 110, 284}, {111, 111, 587}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 107, 284}, {108, 108, 588}, {109, 109, 284}, {110, 110, 589}, {111, 117, 284}, {118, 118, 590}, {119, 119, 284}, {120, 120, 591}, {121, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 592}, {98, 104, 284}, {105, 105, 593}, {106, 107, 284}, {108, 108, 594}, {109, 110, 284}, {111, 111, 595}, {112, 65500, -46}, },
            {{36, 110, -45}, {111, 111, 596}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 97, 597}, {98, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 101, 284}, {102, 102, 598}, {103, 108, 284}, {109, 109, 599}, {110, 110, 600}, {111, 122, 284}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 601}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 97, 602}, {98, 100, 284}, {101, 101, 603}, {102, 116, 284}, {117, 117, 604}, {118, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 605}, {98, 110, 284}, {111, 111, 606}, {112, 113, 284}, {114, 114, 607}, {115, 116, 284}, {117, 117, 608}, {118, 65500, -55}, },
            {{36, 100, -47}, {101, 101, 609}, {102, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 103, 284}, {104, 104, 610}, {105, 115, 284}, {116, 116, 611}, {117, 117, 612}, {118, 118, 284}, {119, 119, 613}, {120, 120, 284}, {121, 121, 614}, {122, 65500, -45}, },
            {{36, 103, -58}, {104, 104, 615}, {105, 113, 284}, {114, 114, 616}, {115, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 109, 284}, {110, 110, 617}, {111, 65500, -52}, },
            {{36, 110, -45}, {111, 111, 618}, {112, 65500, -46}, },
            {{36, 103, -58}, {104, 104, 619}, {105, 122, 284}, {170, 65500, -10}, },
            {},
            {{61, 61, 620}, {124, 124, 621}, },
            {},
            {},
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{9, 32, -2}, },
            {},
            {{0, 65535, -9}, },
            {},
            {{34, 34, 622}, {39, 39, 623}, {48, 48, 624}, {49, 49, 625}, {50, 50, 626}, {51, 51, 627}, {52, 52, 628}, {53, 53, 629}, {54, 54, 630}, {55, 55, 631}, {92, 92, 632}, {98, 98, 633}, {102, 102, 634}, {110, 110, 635}, {114, 114, 636}, {116, 116, 637}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {},
            {},
            {},
            {{39, 39, 638}, },
            {{34, 34, 639}, {39, 39, 640}, {48, 48, 641}, {49, 49, 642}, {50, 50, 643}, {51, 51, 644}, {52, 52, 645}, {53, 53, 646}, {54, 54, 647}, {55, 55, 648}, {92, 92, 649}, {98, 98, 650}, {102, 102, 651}, {110, 110, 652}, {114, 114, 653}, {116, 116, 654}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{46, 46, 655}, },
            {{48, 48, 656}, {49, 49, 657}, {50, 50, 658}, {51, 51, 659}, {52, 52, 660}, {53, 53, 661}, {54, 54, 662}, {55, 55, 663}, {56, 56, 664}, {57, 57, 665}, {68, 68, 666}, {69, 69, 667}, {70, 70, 668}, {95, 95, 669}, {100, 100, 670}, {101, 101, 671}, {102, 102, 672}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{0, 41, 673}, {42, 42, 674}, {43, 65535, 673}, },
            {{0, 9, 675}, {10, 10, 676}, {11, 12, 675}, {13, 13, 677}, {14, 65535, 675}, },
            {},
            {{48, 48, 678}, {49, 49, 679}, {50, 50, 680}, {51, 51, 681}, {52, 52, 682}, {53, 53, 683}, {54, 54, 684}, {55, 55, 685}, {56, 56, 686}, {57, 57, 687}, {68, 68, 688}, {69, 69, 689}, {70, 70, 690}, {100, 100, 691}, {101, 101, 692}, {102, 102, 693}, },
            {{46, 46, 535}, {48, 48, 694}, {49, 49, 695}, {50, 50, 696}, {51, 51, 697}, {52, 52, 698}, {53, 53, 699}, {54, 54, 700}, {55, 55, 701}, {56, 57, -22}, {68, 70, -22}, {76, 76, 702}, {95, 95, 703}, {100, 102, -22}, {108, 108, 704}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 46, 535}, {48, 48, 705}, {49, 49, 706}, {50, 50, 707}, {51, 51, 708}, {52, 52, 709}, {53, 53, 710}, {54, 54, 711}, {55, 55, 712}, {56, 70, -538}, {95, 95, 713}, {100, 102, -22}, },
            {{46, 102, -546}, },
            {{48, 48, 714}, {49, 49, 715}, },
            {},
            {{43, 43, 716}, {45, 45, 717}, {48, 48, 718}, {49, 49, 719}, {50, 50, 720}, {51, 51, 721}, {52, 52, 722}, {53, 53, 723}, {54, 54, 724}, {55, 55, 725}, {56, 56, 726}, {57, 57, 727}, },
            {},
            {},
            {{46, 46, 728}, {48, 48, 729}, {49, 49, 730}, {50, 50, 731}, {51, 51, 732}, {52, 52, 733}, {53, 53, 734}, {54, 54, 735}, {55, 55, 736}, {56, 56, 737}, {57, 57, 738}, {65, 65, 739}, {66, 66, 740}, {67, 67, 741}, {68, 68, 742}, {69, 69, 743}, {70, 70, 744}, {97, 97, 745}, {98, 98, 746}, {99, 99, 747}, {100, 100, 748}, {101, 101, 749}, {102, 102, 750}, },
            {{48, 48, 751}, {49, 49, 752}, {50, 50, 753}, {51, 51, 754}, {52, 52, 755}, {53, 53, 756}, {54, 54, 757}, {55, 55, 758}, {56, 57, -22}, {95, 95, 552}, },
            {{48, 49, -548}, },
            {},
            {{43, 57, -550}, },
            {},
            {},
            {{46, 102, -553}, },
            {{46, 46, 535}, {48, 48, 759}, {49, 49, 760}, {50, 50, 761}, {51, 51, 762}, {52, 52, 763}, {53, 53, 764}, {54, 54, 765}, {55, 55, 766}, {56, 56, 767}, {57, 57, 768}, {68, 76, -22}, {95, 95, 769}, {100, 108, -22}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{48, 48, 770}, {49, 49, 771}, {50, 50, 772}, {51, 51, 773}, {52, 52, 774}, {53, 53, 775}, {54, 54, 776}, {55, 55, 777}, {56, 56, 778}, {57, 57, 779}, {95, 95, 569}, },
            {{61, 61, 780}, },
            {},
            {},
            {},
            {{61, 61, 781}, {62, 62, 782}, },
            {},
            {{36, 95, -10}, {97, 114, 284}, {115, 115, 783}, {116, 65500, -44}, },
            {{36, 114, -578}, {115, 115, 784}, {116, 65500, -44}, },
            {{36, 110, -45}, {111, 111, 785}, {112, 65500, -46}, },
            {{36, 100, -47}, {101, 101, 786}, {102, 65500, -57}, },
            {{36, 95, -10}, {97, 115, 284}, {116, 116, 787}, {117, 122, 284}, {170, 65500, -10}, },
            {{36, 114, -578}, {115, 115, 788}, {116, 116, 789}, {117, 65500, -582}, },
            {{36, 95, -10}, {97, 97, 790}, {98, 65500, -51}, },
            {{36, 95, -10}, {97, 97, 791}, {98, 65500, -51}, },
            {{36, 95, -10}, {97, 108, 284}, {109, 109, 792}, {110, 110, 793}, {111, 65500, -52}, },
            {{36, 101, -52}, {102, 102, 794}, {103, 122, 284}, {170, 65500, -10}, },
            {{36, 114, -578}, {115, 115, 795}, {116, 65500, -44}, },
            {{36, 95, -10}, {97, 116, 284}, {117, 117, 796}, {118, 65500, -55}, },
            {{36, 114, -578}, {115, 115, 797}, {116, 65500, -44}, },
            {{36, 116, -589}, {117, 117, 798}, {118, 65500, -55}, },
            {{36, 100, -47}, {101, 101, 799}, {102, 65500, -57}, },
            {{36, 115, -582}, {116, 116, 800}, {117, 65500, -582}, },
            {{36, 107, -48}, {108, 108, 801}, {109, 122, 284}, {170, 65500, -10}, },
            {{36, 109, -60}, {110, 110, 802}, {111, 65500, -52}, },
            {{36, 110, -45}, {111, 111, 803}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 113, 284}, {114, 114, 804}, {115, 65500, -59}, },
            {{36, 115, -582}, {116, 116, 805}, {117, 65500, -582}, },
            {{36, 109, -60}, {110, 110, 806}, {111, 65500, -52}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 111, 284}, {112, 112, 807}, {113, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 99, 284}, {100, 100, 808}, {101, 104, 284}, {105, 105, 809}, {106, 114, 284}, {115, 115, 810}, {116, 116, 811}, {117, 65500, -582}, },
            {{36, 109, -60}, {110, 110, 812}, {111, 65500, -52}, },
            {{36, 115, -582}, {116, 116, 813}, {117, 65500, -582}, },
            {{36, 95, -10}, {97, 118, 284}, {119, 119, 814}, {120, 122, 284}, {170, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 815}, {109, 65500, -594}, },
            {{36, 95, -10}, {97, 98, 284}, {99, 99, 816}, {100, 122, 284}, {170, 65500, -10}, },
            {{36, 113, -597}, {114, 114, 817}, {115, 65500, -59}, },
            {{36, 95, -10}, {97, 104, 284}, {105, 105, 818}, {106, 110, 284}, {111, 111, 819}, {112, 65500, -46}, },
            {{36, 97, -44}, {98, 98, 820}, {99, 122, 284}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 112, 284}, {113, 113, 821}, {114, 115, 284}, {116, 116, 822}, {117, 65500, -582}, },
            {{36, 110, -45}, {111, 111, 823}, {112, 65500, -46}, },
            {{36, 95, -10}, {97, 97, 824}, {98, 113, 284}, {114, 114, 825}, {115, 65500, -59}, },
            {{36, 97, -44}, {98, 98, 826}, {99, 111, 284}, {112, 112, 827}, {113, 65500, -601}, },
            {{36, 104, -609}, {105, 105, 828}, {106, 122, 284}, {170, 65500, -10}, },
            {{36, 109, -60}, {110, 110, 829}, {111, 65500, -52}, },
            {{36, 104, -609}, {105, 105, 830}, {106, 113, 284}, {114, 114, 831}, {115, 65500, -59}, },
            {{36, 95, -10}, {97, 97, 832}, {98, 104, 284}, {105, 105, 833}, {106, 116, 284}, {117, 117, 834}, {118, 120, 284}, {121, 121, 835}, {122, 65500, -45}, },
            {{36, 114, -578}, {115, 115, 836}, {116, 65500, -44}, },
            {{36, 104, -609}, {105, 105, 837}, {106, 107, 284}, {108, 108, 838}, {109, 65500, -594}, },
            {{36, 104, -609}, {105, 105, 839}, {106, 65500, -615}, },
            {},
            {},
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 34, -9}, {35, 47, 277}, {48, 48, 840}, {49, 49, 841}, {50, 50, 842}, {51, 51, 843}, {52, 52, 844}, {53, 53, 845}, {54, 54, 846}, {55, 55, 847}, {56, 91, 277}, {92, 65535, -9}, },
            {{0, 65535, -626}, },
            {{0, 65535, -626}, },
            {{0, 65535, -626}, },
            {{0, 47, -626}, {48, 48, 848}, {49, 49, 849}, {50, 50, 850}, {51, 51, 851}, {52, 52, 852}, {53, 53, 853}, {54, 54, 854}, {55, 55, 855}, {56, 65535, -626}, },
            {{0, 65535, -630}, },
            {{0, 65535, -630}, },
            {{0, 65535, -630}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {},
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, {48, 48, 857}, {49, 49, 858}, {50, 50, 859}, {51, 51, 860}, {52, 52, 861}, {53, 53, 862}, {54, 54, 863}, {55, 55, 864}, },
            {{39, 55, -643}, },
            {{39, 55, -643}, },
            {{39, 55, -643}, },
            {{39, 39, 856}, {48, 48, 865}, {49, 49, 866}, {50, 50, 867}, {51, 51, 868}, {52, 52, 869}, {53, 53, 870}, {54, 54, 871}, {55, 55, 872}, },
            {{39, 55, -647}, },
            {{39, 55, -647}, },
            {{39, 55, -647}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {},
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {{48, 102, -524}, },
            {},
            {{43, 43, 873}, {45, 45, 874}, {48, 48, 875}, {49, 49, 876}, {50, 50, 877}, {51, 51, 878}, {52, 52, 879}, {53, 53, 880}, {54, 54, 881}, {55, 55, 882}, {56, 56, 883}, {57, 57, 884}, },
            {},
            {{48, 57, -524}, {95, 95, 669}, },
            {},
            {{43, 57, -669}, },
            {},
            {{0, 65535, -534}, },
            {{0, 41, 885}, {42, 42, 674}, {43, 46, 885}, {47, 47, 886}, {48, 65535, 885}, },
            {{0, 65535, -535}, },
            {},
            {{10, 10, 887}, },
            {{48, 48, 888}, {49, 49, 889}, {50, 50, 890}, {51, 51, 891}, {52, 52, 892}, {53, 53, 893}, {54, 54, 894}, {55, 55, 895}, {56, 56, 896}, {57, 57, 897}, {68, 70, -537}, {95, 95, 898}, {100, 102, -537}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {},
            {{43, 43, 899}, {45, 45, 900}, {48, 48, 901}, {49, 49, 902}, {50, 50, 903}, {51, 51, 904}, {52, 52, 905}, {53, 53, 906}, {54, 54, 907}, {55, 55, 908}, {56, 56, 909}, {57, 57, 910}, },
            {},
            {},
            {{43, 57, -691}, },
            {},
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {{46, 108, -538}, },
            {},
            {{48, 57, -538}, {95, 95, 703}, },
            {},
            {{46, 102, -546}, },
            {{46, 102, -546}, },
            {{46, 102, -546}, },
            {{46, 102, -546}, },
            {{46, 102, -546}, },
            {{46, 102, -546}, },
            {{46, 102, -546}, },
            {{46, 102, -546}, },
            {{48, 57, -546}, {95, 95, 713}, },
            {{48, 48, 911}, {49, 49, 912}, {76, 76, 913}, {95, 95, 914}, {108, 108, 915}, },
            {{48, 108, -716}, },
            {{48, 57, -550}, },
            {{48, 57, -550}, },
            {{48, 48, 916}, {49, 49, 917}, {50, 50, 918}, {51, 51, 919}, {52, 52, 920}, {53, 53, 921}, {54, 54, 922}, {55, 55, 923}, {56, 56, 924}, {57, 57, 925}, {68, 68, 926}, {70, 70, 927}, {95, 95, 928}, {100, 100, 929}, {102, 102, 930}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 48, 931}, {49, 49, 932}, {50, 50, 933}, {51, 51, 934}, {52, 52, 935}, {53, 53, 936}, {54, 54, 937}, {55, 55, 938}, {56, 56, 939}, {57, 57, 940}, {65, 65, 941}, {66, 66, 942}, {67, 67, 943}, {68, 68, 944}, {69, 69, 945}, {70, 70, 946}, {97, 97, 947}, {98, 98, 948}, {99, 99, 949}, {100, 100, 950}, {101, 101, 951}, {102, 102, 952}, },
            {{46, 46, 953}, {48, 48, 954}, {49, 49, 955}, {50, 50, 956}, {51, 51, 957}, {52, 52, 958}, {53, 53, 959}, {54, 54, 960}, {55, 55, 961}, {56, 56, 962}, {57, 57, 963}, {65, 65, 964}, {66, 66, 965}, {67, 67, 966}, {68, 68, 967}, {69, 69, 968}, {70, 70, 969}, {76, 76, 970}, {80, 80, 971}, {95, 95, 972}, {97, 97, 973}, {98, 98, 974}, {99, 99, 975}, {100, 100, 976}, {101, 101, 977}, {102, 102, 978}, {108, 108, 979}, {112, 112, 980}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 46, 535}, {48, 48, 981}, {49, 49, 982}, {50, 50, 983}, {51, 51, 984}, {52, 52, 985}, {53, 53, 986}, {54, 54, 987}, {55, 55, 988}, {56, 76, -538}, {95, 95, 989}, {100, 108, -538}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{46, 108, -561}, },
            {{48, 57, -561}, {95, 95, 769}, },
            {{46, 46, 535}, {48, 48, 990}, {49, 49, 991}, {50, 50, 992}, {51, 51, 993}, {52, 52, 994}, {53, 53, 995}, {54, 54, 996}, {55, 55, 997}, {56, 56, 998}, {57, 57, 999}, {68, 76, -22}, {95, 95, 1000}, {100, 108, -22}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {},
            {},
            {{61, 61, 1001}, },
            {{36, 115, -582}, {116, 116, 1002}, {117, 65500, -582}, },
            {{36, 100, -47}, {101, 101, 1003}, {102, 65500, -57}, },
            {{36, 107, -48}, {108, 108, 1004}, {109, 65500, -594}, },
            {{36, 95, -10}, {97, 97, 1005}, {98, 65500, -51}, },
            {{36, 100, -47}, {101, 101, 1006}, {102, 65500, -57}, },
            {{36, 100, -47}, {101, 101, 1007}, {102, 65500, -57}, },
            {{36, 98, -607}, {99, 99, 1008}, {100, 65500, -607}, },
            {{36, 113, -597}, {114, 114, 1009}, {115, 65500, -59}, },
            {{36, 114, -578}, {115, 115, 1010}, {116, 65500, -44}, },
            {{36, 111, -601}, {112, 112, 1011}, {113, 65500, -601}, },
            {{36, 109, -60}, {110, 110, 1012}, {111, 114, 284}, {115, 115, 1013}, {116, 116, 1014}, {117, 65500, -582}, },
            {{36, 95, -10}, {97, 97, 1015}, {98, 104, 284}, {105, 105, 1016}, {106, 65500, -615}, },
            {{36, 98, -607}, {99, 99, 1017}, {100, 65500, -607}, },
            {{36, 97, -44}, {98, 98, 1018}, {99, 65500, -610}, },
            {{36, 100, -47}, {101, 101, 1019}, {102, 65500, -57}, },
            {{36, 108, -586}, {109, 109, 1020}, {110, 122, 284}, {170, 65500, -10}, },
            {{36, 109, -60}, {110, 110, 1021}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1022}, {102, 65500, -57}, },
            {{36, 114, -578}, {115, 115, 1023}, {116, 65500, -44}, },
            {{36, 95, -10}, {97, 97, 1024}, {98, 65500, -51}, },
            {{36, 95, -10}, {97, 97, 1025}, {98, 65500, -51}, },
            {{36, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 1026}, {112, 65500, -46}, },
            {{36, 99, -602}, {100, 100, 1027}, {101, 122, 284}, {170, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1028}, {109, 110, 284}, {111, 111, 1029}, {112, 65500, -46}, },
            {{36, 104, -609}, {105, 105, 1030}, {106, 65500, -615}, },
            {{36, 115, -582}, {116, 116, 1031}, {117, 65500, -582}, },
            {{36, 115, -582}, {116, 116, 1032}, {117, 65500, -582}, },
            {{36, 100, -47}, {101, 101, 1033}, {102, 65500, -57}, },
            {{36, 95, -10}, {97, 102, 284}, {103, 103, 1034}, {104, 122, 284}, {170, 65500, -10}, },
            {{36, 104, -609}, {105, 105, 1035}, {106, 65500, -615}, },
            {{36, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1036}, {109, 65500, -594}, },
            {{36, 95, -10}, {97, 106, 284}, {107, 107, 1037}, {108, 122, 284}, {170, 65500, -10}, },
            {{36, 115, -582}, {116, 116, 1038}, {117, 65500, -582}, },
            {{36, 95, -10}, {97, 117, 284}, {118, 118, 1039}, {119, 122, 284}, {170, 65500, -10}, },
            {{36, 115, -582}, {116, 116, 1040}, {117, 117, 284}, {118, 118, 1041}, {119, 65500, -820}, },
            {{36, 107, -48}, {108, 108, 1042}, {109, 65500, -594}, },
            {{36, 116, -589}, {117, 117, 1043}, {118, 65500, -55}, },
            {{36, 116, -589}, {117, 117, 1044}, {118, 65500, -55}, },
            {{36, 113, -597}, {114, 114, 1045}, {115, 65500, -59}, },
            {{36, 115, -582}, {116, 116, 1046}, {117, 65500, -582}, },
            {{36, 104, -609}, {105, 105, 1047}, {106, 65500, -615}, },
            {{36, 114, -578}, {115, 115, 1048}, {116, 65500, -44}, },
            {{36, 100, -47}, {101, 101, 1049}, {102, 65500, -57}, },
            {{36, 115, -582}, {116, 116, 1050}, {117, 65500, -582}, },
            {{36, 98, -607}, {99, 99, 1051}, {100, 65500, -607}, },
            {{36, 114, -578}, {115, 115, 1052}, {116, 65500, -44}, },
            {{36, 110, -45}, {111, 111, 1053}, {112, 65500, -46}, },
            {{36, 109, -60}, {110, 110, 1054}, {111, 65500, -52}, },
            {{36, 102, -814}, {103, 103, 1055}, {104, 65500, -814}, },
            {{36, 100, -47}, {101, 101, 1056}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 116, -589}, {117, 117, 1057}, {118, 65500, -55}, },
            {{36, 99, -602}, {100, 100, 1058}, {101, 65500, -808}, },
            {{36, 95, -10}, {97, 97, 1059}, {98, 65500, -51}, },
            {{36, 107, -48}, {108, 108, 1060}, {109, 65500, -594}, },
            {{0, 47, -626}, {48, 48, 1061}, {49, 49, 1062}, {50, 50, 1063}, {51, 51, 1064}, {52, 52, 1065}, {53, 53, 1066}, {54, 54, 1067}, {55, 55, 1068}, {56, 65535, -626}, },
            {{0, 65535, -842}, },
            {{0, 65535, -842}, },
            {{0, 65535, -842}, },
            {{0, 65535, -842}, },
            {{0, 65535, -842}, },
            {{0, 65535, -842}, },
            {{0, 65535, -842}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {},
            {{39, 39, 856}, {48, 48, 1069}, {49, 49, 1070}, {50, 50, 1071}, {51, 51, 1072}, {52, 52, 1073}, {53, 53, 1074}, {54, 54, 1075}, {55, 55, 1076}, },
            {{39, 55, -859}, },
            {{39, 55, -859}, },
            {{39, 55, -859}, },
            {{39, 55, -859}, },
            {{39, 55, -859}, },
            {{39, 55, -859}, },
            {{39, 55, -859}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{48, 57, -669}, },
            {{48, 57, -669}, },
            {{48, 48, 1077}, {49, 49, 1078}, {50, 50, 1079}, {51, 51, 1080}, {52, 52, 1081}, {53, 53, 1082}, {54, 54, 1083}, {55, 55, 1084}, {56, 56, 1085}, {57, 57, 1086}, {68, 68, 666}, {70, 70, 668}, {95, 95, 1087}, {100, 100, 670}, {102, 102, 672}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{0, 41, 1088}, {42, 42, 674}, {43, 65535, 1088}, },
            {},
            {},
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 102, -680}, },
            {{48, 57, -680}, {95, 95, 898}, },
            {{48, 57, -691}, },
            {{48, 57, -691}, },
            {{48, 48, 1089}, {49, 49, 1090}, {50, 50, 1091}, {51, 51, 1092}, {52, 52, 1093}, {53, 53, 1094}, {54, 54, 1095}, {55, 55, 1096}, {56, 56, 1097}, {57, 57, 1098}, {68, 68, 688}, {70, 70, 690}, {95, 95, 1099}, {100, 100, 691}, {102, 102, 693}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 108, -716}, },
            {{48, 108, -716}, },
            {},
            {{48, 49, -716}, {95, 95, 914}, },
            {},
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {{48, 102, -720}, },
            {},
            {},
            {{48, 57, -720}, {95, 95, 928}, },
            {},
            {},
            {{48, 48, 1100}, {49, 49, 1101}, {50, 50, 1102}, {51, 51, 1103}, {52, 52, 1104}, {53, 53, 1105}, {54, 54, 1106}, {55, 55, 1107}, {56, 56, 1108}, {57, 57, 1109}, {65, 65, 1110}, {66, 66, 1111}, {67, 67, 1112}, {68, 68, 1113}, {69, 69, 1114}, {70, 70, 1115}, {80, 80, 971}, {95, 95, 1116}, {97, 97, 1117}, {98, 98, 1118}, {99, 99, 1119}, {100, 100, 1120}, {101, 101, 1121}, {102, 102, 1122}, {112, 112, 980}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 70, -730}, {80, 80, 971}, {97, 102, -730}, {112, 112, 980}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {},
            {{43, 43, 1123}, {45, 45, 1124}, {48, 48, 1125}, {49, 49, 1126}, {50, 50, 1127}, {51, 51, 1128}, {52, 52, 1129}, {53, 53, 1130}, {54, 54, 1131}, {55, 55, 1132}, {56, 56, 1133}, {57, 57, 1134}, },
            {{48, 70, -731}, {95, 102, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {{46, 112, -731}, },
            {},
            {{43, 57, -973}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{46, 108, -753}, },
            {{48, 57, -753}, {95, 95, 989}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{46, 108, -772}, },
            {{48, 57, -772}, {95, 95, 1000}, },
            {},
            {{36, 113, -597}, {114, 114, 1135}, {115, 65500, -59}, },
            {{36, 113, -597}, {114, 114, 1136}, {115, 65500, -59}, },
            {{36, 100, -47}, {101, 101, 1137}, {102, 65500, -57}, },
            {{36, 106, -818}, {107, 107, 1138}, {108, 65500, -818}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 103, -58}, {104, 104, 1139}, {105, 65500, -62}, },
            {{36, 65500, -10}, },
            {{36, 114, -578}, {115, 115, 1140}, {116, 65500, -44}, },
            {{36, 110, -45}, {111, 111, 1141}, {112, 65500, -46}, },
            {{36, 100, -47}, {101, 101, 1142}, {102, 65500, -57}, },
            {{36, 115, -582}, {116, 116, 1143}, {117, 65500, -582}, },
            {{36, 104, -609}, {105, 105, 1144}, {106, 65500, -615}, },
            {{36, 116, -589}, {117, 117, 1145}, {118, 65500, -55}, },
            {{36, 109, -60}, {110, 110, 1146}, {111, 65500, -52}, },
            {{36, 110, -45}, {111, 111, 1147}, {112, 65500, -46}, },
            {{36, 107, -48}, {108, 108, 1148}, {109, 65500, -594}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -582}, {116, 116, 1149}, {117, 65500, -582}, },
            {{36, 109, -60}, {110, 110, 1150}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1151}, {102, 65500, -57}, },
            {{36, 107, -48}, {108, 108, 1152}, {109, 65500, -594}, },
            {{36, 115, -582}, {116, 116, 1153}, {117, 65500, -582}, },
            {{36, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1154}, {109, 65500, -594}, },
            {{36, 100, -47}, {101, 101, 1155}, {102, 65500, -57}, },
            {{36, 113, -597}, {114, 114, 1156}, {115, 65500, -59}, },
            {{36, 98, -607}, {99, 99, 1157}, {100, 65500, -607}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1158}, {98, 65500, -51}, },
            {{36, 113, -597}, {114, 114, 1159}, {115, 65500, -59}, },
            {{36, 65500, -10}, },
            {{36, 117, -820}, {118, 118, 1160}, {119, 65500, -820}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1161}, {98, 65500, -51}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1162}, {98, 65500, -51}, },
            {{36, 100, -47}, {101, 101, 1163}, {102, 65500, -57}, },
            {{36, 104, -609}, {105, 105, 1164}, {106, 65500, -615}, },
            {{36, 104, -609}, {105, 105, 1165}, {106, 65500, -615}, },
            {{36, 100, -47}, {101, 101, 1166}, {102, 104, 284}, {105, 105, 1167}, {106, 65500, -615}, },
            {{36, 113, -597}, {114, 114, 1168}, {115, 65500, -59}, },
            {{36, 115, -582}, {116, 116, 1169}, {117, 65500, -582}, },
            {{36, 104, -609}, {105, 105, 1170}, {106, 65500, -615}, },
            {{36, 98, -607}, {99, 99, 1171}, {100, 65500, -607}, },
            {{36, 98, -607}, {99, 99, 1172}, {100, 65500, -607}, },
            {{36, 113, -597}, {114, 114, 1173}, {115, 65500, -59}, },
            {{36, 98, -607}, {99, 99, 1174}, {100, 65500, -607}, },
            {{36, 103, -58}, {104, 104, 1175}, {105, 65500, -62}, },
            {{36, 65500, -10}, },
            {{36, 118, -605}, {119, 119, 1176}, {120, 65500, -605}, },
            {{36, 114, -578}, {115, 115, 1177}, {116, 65500, -44}, },
            {{36, 102, -814}, {103, 103, 1178}, {104, 65500, -814}, },
            {{36, 65500, -10}, },
            {{36, 97, -44}, {98, 98, 1179}, {99, 65500, -610}, },
            {{36, 65500, -10}, },
            {{36, 115, -582}, {116, 116, 1180}, {117, 65500, -582}, },
            {{36, 100, -47}, {101, 101, 1181}, {102, 65500, -57}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{39, 39, 856}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 102, -877}, },
            {{48, 57, -877}, {95, 95, 1087}, },
            {{0, 65535, -887}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 102, -903}, },
            {{48, 57, -903}, {95, 95, 1099}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 70, -933}, {95, 102, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 112, -933}, },
            {{48, 57, -973}, },
            {{48, 57, -973}, },
            {{48, 48, 1182}, {49, 49, 1183}, {50, 50, 1184}, {51, 51, 1185}, {52, 52, 1186}, {53, 53, 1187}, {54, 54, 1188}, {55, 55, 1189}, {56, 56, 1190}, {57, 57, 1191}, {68, 68, 1192}, {70, 70, 1193}, {95, 95, 1194}, {100, 100, 1195}, {102, 102, 1196}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{36, 95, -10}, {97, 97, 1197}, {98, 65500, -51}, },
            {{36, 115, -582}, {116, 116, 1198}, {117, 65500, -582}, },
            {{36, 95, -10}, {97, 97, 1199}, {98, 65500, -51}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -60}, {110, 110, 1200}, {111, 65500, -52}, },
            {{36, 98, -607}, {99, 99, 1201}, {100, 65500, -607}, },
            {{36, 65500, -10}, },
            {{36, 109, -60}, {110, 110, 1202}, {111, 65500, -52}, },
            {{36, 107, -48}, {108, 108, 1203}, {109, 65500, -594}, },
            {{36, 104, -609}, {105, 105, 1204}, {106, 65500, -615}, },
            {{36, 109, -60}, {110, 110, 1205}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1206}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 99, -602}, {100, 100, 1207}, {101, 65500, -808}, },
            {{36, 65500, -10}, },
            {{36, 107, -48}, {108, 108, 1208}, {109, 65500, -594}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1209}, {102, 65500, -57}, },
            {{36, 108, -586}, {109, 109, 1210}, {110, 65500, -800}, },
            {{36, 115, -582}, {116, 116, 1211}, {117, 65500, -582}, },
            {{36, 95, -10}, {97, 97, 1212}, {98, 65500, -51}, },
            {{36, 109, -60}, {110, 110, 1213}, {111, 65500, -52}, },
            {{36, 101, -52}, {102, 102, 1214}, {103, 65500, -587}, },
            {{36, 100, -47}, {101, 101, 1215}, {102, 65500, -57}, },
            {{36, 102, -814}, {103, 103, 1216}, {104, 65500, -814}, },
            {{36, 115, -582}, {116, 116, 1217}, {117, 65500, -582}, },
            {{36, 98, -607}, {99, 99, 1218}, {100, 65500, -607}, },
            {{36, 99, -602}, {100, 100, 1219}, {101, 65500, -808}, },
            {{36, 98, -607}, {99, 99, 1220}, {100, 65500, -607}, },
            {{36, 114, -578}, {115, 115, 1221}, {116, 65500, -44}, },
            {{36, 113, -597}, {114, 114, 1222}, {115, 65500, -59}, },
            {{36, 109, -60}, {110, 110, 1223}, {111, 65500, -52}, },
            {{36, 65500, -10}, },
            {{36, 98, -607}, {99, 99, 1224}, {100, 65500, -607}, },
            {{36, 115, -582}, {116, 116, 1225}, {117, 65500, -582}, },
            {{36, 113, -597}, {114, 114, 1226}, {115, 65500, -59}, },
            {{36, 65500, -10}, },
            {{36, 103, -58}, {104, 104, 1227}, {105, 65500, -62}, },
            {{36, 113, -597}, {114, 114, 1228}, {115, 65500, -59}, },
            {{36, 114, -578}, {115, 115, 1229}, {116, 65500, -44}, },
            {{36, 104, -609}, {105, 105, 1230}, {106, 65500, -615}, },
            {{36, 100, -47}, {101, 101, 1231}, {102, 65500, -57}, },
            {{36, 114, -578}, {115, 115, 1232}, {116, 65500, -44}, },
            {{36, 104, -609}, {105, 105, 1233}, {106, 65500, -615}, },
            {{36, 65500, -10}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {{48, 102, -1127}, },
            {},
            {},
            {{48, 57, -1127}, {95, 95, 1194}, },
            {},
            {},
            {{36, 98, -607}, {99, 99, 1234}, {100, 65500, -607}, },
            {{36, 65500, -10}, },
            {{36, 109, -60}, {110, 110, 1235}, {111, 65500, -52}, },
            {{36, 100, -47}, {101, 101, 1236}, {102, 65500, -57}, },
            {{36, 115, -582}, {116, 116, 1237}, {117, 65500, -582}, },
            {{36, 116, -589}, {117, 117, 1238}, {118, 65500, -55}, },
            {{36, 115, -582}, {116, 116, 1239}, {117, 65500, -582}, },
            {{36, 115, -582}, {116, 116, 1240}, {117, 65500, -582}, },
            {{36, 109, -60}, {110, 110, 1241}, {111, 65500, -52}, },
            {{36, 65500, -10}, },
            {{36, 114, -578}, {115, 115, 1242}, {116, 65500, -44}, },
            {{36, 95, -10}, {97, 120, 284}, {121, 121, 1243}, {122, 65500, -45}, },
            {{36, 113, -597}, {114, 114, 1244}, {115, 65500, -59}, },
            {{36, 100, -47}, {101, 101, 1245}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 115, -582}, {116, 116, 1246}, {117, 65500, -582}, },
            {{36, 98, -607}, {99, 99, 1247}, {100, 65500, -607}, },
            {{36, 95, -10}, {97, 97, 1248}, {98, 65500, -51}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1249}, {102, 65500, -57}, },
            {{36, 100, -47}, {101, 101, 1250}, {102, 65500, -57}, },
            {{36, 115, -582}, {116, 116, 1251}, {117, 65500, -582}, },
            {{36, 100, -47}, {101, 101, 1252}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 115, -582}, {116, 116, 1253}, {117, 65500, -582}, },
            {{36, 100, -47}, {101, 101, 1254}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 101, -52}, {102, 102, 1255}, {103, 65500, -587}, },
            {{36, 104, -609}, {105, 105, 1256}, {106, 65500, -615}, },
            {{36, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 1257}, {112, 65500, -46}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1258}, {102, 65500, -57}, },
            {{36, 113, -597}, {114, 114, 1259}, {115, 65500, -59}, },
            {{36, 98, -607}, {99, 99, 1260}, {100, 65500, -607}, },
            {{36, 107, -48}, {108, 108, 1261}, {109, 65500, -594}, },
            {{36, 115, -582}, {116, 116, 1262}, {117, 65500, -582}, },
            {{36, 65500, -10}, },
            {{36, 109, -60}, {110, 110, 1263}, {111, 65500, -52}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1264}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 104, -609}, {105, 105, 1265}, {106, 65500, -615}, },
            {{36, 100, -47}, {101, 101, 1266}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -60}, {110, 110, 1267}, {111, 65500, -52}, },
            {{36, 104, -609}, {105, 105, 1268}, {106, 65500, -615}, },
            {{36, 100, -47}, {101, 101, 1269}, {102, 65500, -57}, },
            {{36, 98, -607}, {99, 99, 1270}, {100, 65500, -607}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1271}, {102, 65500, -57}, },
            {{36, 114, -578}, {115, 115, 1272}, {116, 65500, -44}, },
            {{36, 65500, -10}, },
            {{36, 114, -578}, {115, 115, 1273}, {116, 65500, -44}, },
            {{36, 111, -601}, {112, 112, 1274}, {113, 65500, -601}, },
            {{36, 97, -44}, {98, 98, 1275}, {99, 65500, -610}, },
            {{36, 109, -60}, {110, 110, 1276}, {111, 65500, -52}, },
            {{36, 109, -60}, {110, 110, 1277}, {111, 65500, -52}, },
            {{36, 65500, -10}, },
            {{36, 113, -597}, {114, 114, 1278}, {115, 65500, -59}, },
            {{36, 100, -47}, {101, 101, 1279}, {102, 65500, -57}, },
            {{36, 65500, -10}, },
            {{36, 115, -582}, {116, 116, 1280}, {117, 65500, -582}, },
            {{36, 65500, -10}, },
            {{36, 110, -45}, {111, 111, 1281}, {112, 65500, -46}, },
            {{36, 98, -607}, {99, 99, 1282}, {100, 65500, -607}, },
            {{36, 115, -582}, {116, 116, 1283}, {117, 65500, -582}, },
            {{36, 110, -45}, {111, 111, 1284}, {112, 65500, -46}, },
            {{36, 110, -45}, {111, 111, 1285}, {112, 65500, -46}, },
            {{36, 100, -47}, {101, 101, 1286}, {102, 65500, -57}, },
            {{36, 99, -602}, {100, 100, 1287}, {101, 65500, -808}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1288}, {102, 65500, -57}, },
            {{36, 104, -609}, {105, 105, 1289}, {106, 65500, -615}, },
            {{36, 115, -582}, {116, 116, 1290}, {117, 65500, -582}, },
            {{36, 104, -609}, {105, 105, 1291}, {106, 65500, -615}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -60}, {110, 110, 1292}, {111, 65500, -52}, },
            {{36, 115, -582}, {116, 116, 1293}, {117, 65500, -582}, },
            {{36, 114, -578}, {115, 115, 1294}, {116, 65500, -44}, },
            {{36, 109, -60}, {110, 110, 1295}, {111, 65500, -52}, },
            {{36, 101, -52}, {102, 102, 1296}, {103, 65500, -587}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 121, 284}, {122, 122, 1297}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 97, -44}, {98, 98, 1298}, {99, 65500, -610}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 100, -47}, {101, 101, 1299}, {102, 65500, -57}, },
            {{36, 100, -47}, {101, 101, 1300}, {102, 65500, -57}, },
            {{36, 99, -602}, {100, 100, 1301}, {101, 65500, -808}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 123, 123, 123, 123, 123, 87, -1, 74, 106, 103, -1, 75, 76, 101, 99, 82, 100, 83, 102, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 90, 81, 85, 84, 86, 89, 122, 74, 79, 80, 105, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 77, 104, 78, 88, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 123, 94, -1, 72, -1, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 117, 95, 114, -1, -1, 112, 97, 110, 98, 111, 67, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 0, 113, 69, 68, 68, 68, 68, 68, 68, 68, 68, -1, -1, -1, 69, -1, 69, 68, -1, -1, -1, 69, -1, 69, 68, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, 107, 92, 91, 93, 108, 116, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 13, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 22, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 115, 96, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 121, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 69, -1, 69, -1, 69, -1, -1, 0, 0, 0, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 69, 69, -1, 69, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, 68, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 118, 119, 109, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 21, 74, 74, 74, 74, 74, 74, 27, 74, 74, 31, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 47, 74, 74, 74, 74, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 0, 0, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 68, 68, 68, -1, 68, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 69, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, -1, 68, 68, 68, 68, 68, 68, 68, -1, 68, 68, 68, 68, 68, 68, 68, 68, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, -1, 120, 74, 74, 74, 74, 5, 6, 74, 8, 74, 74, 74, 74, 74, 74, 74, 74, 74, 15, 16, 74, 74, 74, 74, 74, 23, 74, 74, 74, 74, 60, 74, 74, 29, 74, 73, 74, 54, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 43, 74, 74, 74, 70, 74, 48, 74, 74, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 74, 74, 74, 4, 7, 9, 74, 74, 10, 74, 74, 74, 74, 74, 66, 74, 70, 18, 20, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 37, 74, 74, 74, 40, 74, 74, 44, 74, 74, 74, 74, 50, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, -1, 69, 69, 74, 2, 74, 74, 74, 74, 74, 74, 74, 14, 74, 74, 53, 74, 25, 74, 74, 74, 30, 74, 74, 74, 74, 35, 74, 74, 36, 38, 74, 74, 41, 74, 45, 74, 74, 74, 74, 74, 3, 74, 58, 74, 12, 74, 74, 17, 19, 52, 74, 74, 74, 74, 32, 33, 74, 74, 65, 74, 74, 74, 74, 74, 61, 74, 74, 1, 74, 11, 74, 74, 74, 74, 74, 74, 74, 63, 62, 39, 74, 74, 74, 74, 49, 55, 74, 74, 74, 74, 74, 28, 34, 56, 74, 46, 74, 51, 59, 24, 64, 26, 74, 74, 74, 57, 42, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            InputStream str = Lexer.class.getResourceAsStream("lexer.dat");
            System.out.println("lexer.dat bytes: "+str.available());
            BufferedInputStream bis = new BufferedInputStream(str);
            DataInputStream s = new DataInputStream(bis);

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        } catch(Exception e) {
            e.printStackTrace();
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
