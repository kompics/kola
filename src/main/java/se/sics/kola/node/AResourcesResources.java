/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AResourcesResources extends PResources
{
    private PResources _resources_;
    private TSemi _semi_;
    private PResource _resource_;

    public AResourcesResources()
    {
        // Constructor
    }

    public AResourcesResources(
        @SuppressWarnings("hiding") PResources _resources_,
        @SuppressWarnings("hiding") TSemi _semi_,
        @SuppressWarnings("hiding") PResource _resource_)
    {
        // Constructor
        setResources(_resources_);

        setSemi(_semi_);

        setResource(_resource_);

    }

    @Override
    public Object clone()
    {
        return new AResourcesResources(
            cloneNode(this._resources_),
            cloneNode(this._semi_),
            cloneNode(this._resource_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAResourcesResources(this);
    }

    public PResources getResources()
    {
        return this._resources_;
    }

    public void setResources(PResources node)
    {
        if(this._resources_ != null)
        {
            this._resources_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._resources_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    public PResource getResource()
    {
        return this._resource_;
    }

    public void setResource(PResource node)
    {
        if(this._resource_ != null)
        {
            this._resource_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._resource_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._resources_)
            + toString(this._semi_)
            + toString(this._resource_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._resources_ == child)
        {
            this._resources_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        if(this._resource_ == child)
        {
            this._resource_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._resources_ == oldChild)
        {
            setResources((PResources) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        if(this._resource_ == oldChild)
        {
            setResource((PResource) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
