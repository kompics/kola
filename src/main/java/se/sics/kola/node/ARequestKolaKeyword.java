/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class ARequestKolaKeyword extends PKolaKeyword
{
    private TRequestKeyword _requestKeyword_;

    public ARequestKolaKeyword()
    {
        // Constructor
    }

    public ARequestKolaKeyword(
        @SuppressWarnings("hiding") TRequestKeyword _requestKeyword_)
    {
        // Constructor
        setRequestKeyword(_requestKeyword_);

    }

    @Override
    public Object clone()
    {
        return new ARequestKolaKeyword(
            cloneNode(this._requestKeyword_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARequestKolaKeyword(this);
    }

    public TRequestKeyword getRequestKeyword()
    {
        return this._requestKeyword_;
    }

    public void setRequestKeyword(TRequestKeyword node)
    {
        if(this._requestKeyword_ != null)
        {
            this._requestKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._requestKeyword_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._requestKeyword_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._requestKeyword_ == child)
        {
            this._requestKeyword_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._requestKeyword_ == oldChild)
        {
            setRequestKeyword((TRequestKeyword) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
