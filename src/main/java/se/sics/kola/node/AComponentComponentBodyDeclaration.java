/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AComponentComponentBodyDeclaration extends PComponentBodyDeclaration
{
    private PChildDeclaration _childDeclaration_;

    public AComponentComponentBodyDeclaration()
    {
        // Constructor
    }

    public AComponentComponentBodyDeclaration(
        @SuppressWarnings("hiding") PChildDeclaration _childDeclaration_)
    {
        // Constructor
        setChildDeclaration(_childDeclaration_);

    }

    @Override
    public Object clone()
    {
        return new AComponentComponentBodyDeclaration(
            cloneNode(this._childDeclaration_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComponentComponentBodyDeclaration(this);
    }

    public PChildDeclaration getChildDeclaration()
    {
        return this._childDeclaration_;
    }

    public void setChildDeclaration(PChildDeclaration node)
    {
        if(this._childDeclaration_ != null)
        {
            this._childDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._childDeclaration_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._childDeclaration_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._childDeclaration_ == child)
        {
            this._childDeclaration_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._childDeclaration_ == oldChild)
        {
            setChildDeclaration((PChildDeclaration) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
