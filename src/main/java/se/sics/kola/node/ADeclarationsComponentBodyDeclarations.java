/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class ADeclarationsComponentBodyDeclarations extends PComponentBodyDeclarations
{
    private PComponentBodyDeclarations _componentBodyDeclarations_;
    private PComponentBodyDeclaration _componentBodyDeclaration_;

    public ADeclarationsComponentBodyDeclarations()
    {
        // Constructor
    }

    public ADeclarationsComponentBodyDeclarations(
        @SuppressWarnings("hiding") PComponentBodyDeclarations _componentBodyDeclarations_,
        @SuppressWarnings("hiding") PComponentBodyDeclaration _componentBodyDeclaration_)
    {
        // Constructor
        setComponentBodyDeclarations(_componentBodyDeclarations_);

        setComponentBodyDeclaration(_componentBodyDeclaration_);

    }

    @Override
    public Object clone()
    {
        return new ADeclarationsComponentBodyDeclarations(
            cloneNode(this._componentBodyDeclarations_),
            cloneNode(this._componentBodyDeclaration_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclarationsComponentBodyDeclarations(this);
    }

    public PComponentBodyDeclarations getComponentBodyDeclarations()
    {
        return this._componentBodyDeclarations_;
    }

    public void setComponentBodyDeclarations(PComponentBodyDeclarations node)
    {
        if(this._componentBodyDeclarations_ != null)
        {
            this._componentBodyDeclarations_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._componentBodyDeclarations_ = node;
    }

    public PComponentBodyDeclaration getComponentBodyDeclaration()
    {
        return this._componentBodyDeclaration_;
    }

    public void setComponentBodyDeclaration(PComponentBodyDeclaration node)
    {
        if(this._componentBodyDeclaration_ != null)
        {
            this._componentBodyDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._componentBodyDeclaration_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._componentBodyDeclarations_)
            + toString(this._componentBodyDeclaration_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._componentBodyDeclarations_ == child)
        {
            this._componentBodyDeclarations_ = null;
            return;
        }

        if(this._componentBodyDeclaration_ == child)
        {
            this._componentBodyDeclaration_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._componentBodyDeclarations_ == oldChild)
        {
            setComponentBodyDeclarations((PComponentBodyDeclarations) newChild);
            return;
        }

        if(this._componentBodyDeclaration_ == oldChild)
        {
            setComponentBodyDeclaration((PComponentBodyDeclaration) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
