/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AUnsubscribeKolaKeyword extends PKolaKeyword
{
    private TUnsubscribeKeyword _unsubscribeKeyword_;

    public AUnsubscribeKolaKeyword()
    {
        // Constructor
    }

    public AUnsubscribeKolaKeyword(
        @SuppressWarnings("hiding") TUnsubscribeKeyword _unsubscribeKeyword_)
    {
        // Constructor
        setUnsubscribeKeyword(_unsubscribeKeyword_);

    }

    @Override
    public Object clone()
    {
        return new AUnsubscribeKolaKeyword(
            cloneNode(this._unsubscribeKeyword_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnsubscribeKolaKeyword(this);
    }

    public TUnsubscribeKeyword getUnsubscribeKeyword()
    {
        return this._unsubscribeKeyword_;
    }

    public void setUnsubscribeKeyword(TUnsubscribeKeyword node)
    {
        if(this._unsubscribeKeyword_ != null)
        {
            this._unsubscribeKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unsubscribeKeyword_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._unsubscribeKeyword_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._unsubscribeKeyword_ == child)
        {
            this._unsubscribeKeyword_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._unsubscribeKeyword_ == oldChild)
        {
            setUnsubscribeKeyword((TUnsubscribeKeyword) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
