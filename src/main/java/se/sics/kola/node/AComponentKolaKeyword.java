/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AComponentKolaKeyword extends PKolaKeyword
{
    private TComponentKeyword _componentKeyword_;

    public AComponentKolaKeyword()
    {
        // Constructor
    }

    public AComponentKolaKeyword(
        @SuppressWarnings("hiding") TComponentKeyword _componentKeyword_)
    {
        // Constructor
        setComponentKeyword(_componentKeyword_);

    }

    @Override
    public Object clone()
    {
        return new AComponentKolaKeyword(
            cloneNode(this._componentKeyword_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComponentKolaKeyword(this);
    }

    public TComponentKeyword getComponentKeyword()
    {
        return this._componentKeyword_;
    }

    public void setComponentKeyword(TComponentKeyword node)
    {
        if(this._componentKeyword_ != null)
        {
            this._componentKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._componentKeyword_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._componentKeyword_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._componentKeyword_ == child)
        {
            this._componentKeyword_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._componentKeyword_ == oldChild)
        {
            setComponentKeyword((TComponentKeyword) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
