/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import java.util.*;
import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AUshrTypeArguments extends PTypeArguments
{
    private TLt _lt1_;
    private final LinkedList<PTypeArgumentListHead> _heads1_ = new LinkedList<PTypeArgumentListHead>();
    private PTypeDeclSpecifier _specifier1_;
    private TLt _lt2_;
    private final LinkedList<PTypeArgumentListHead> _heads2_ = new LinkedList<PTypeArgumentListHead>();
    private PTypeDeclSpecifier _specifier2_;
    private TLt _lt3_;
    private PTypeArgumentList _typeArgumentList_;
    private TUshr _ushr_;

    public AUshrTypeArguments()
    {
        // Constructor
    }

    public AUshrTypeArguments(
        @SuppressWarnings("hiding") TLt _lt1_,
        @SuppressWarnings("hiding") List<?> _heads1_,
        @SuppressWarnings("hiding") PTypeDeclSpecifier _specifier1_,
        @SuppressWarnings("hiding") TLt _lt2_,
        @SuppressWarnings("hiding") List<?> _heads2_,
        @SuppressWarnings("hiding") PTypeDeclSpecifier _specifier2_,
        @SuppressWarnings("hiding") TLt _lt3_,
        @SuppressWarnings("hiding") PTypeArgumentList _typeArgumentList_,
        @SuppressWarnings("hiding") TUshr _ushr_)
    {
        // Constructor
        setLt1(_lt1_);

        setHeads1(_heads1_);

        setSpecifier1(_specifier1_);

        setLt2(_lt2_);

        setHeads2(_heads2_);

        setSpecifier2(_specifier2_);

        setLt3(_lt3_);

        setTypeArgumentList(_typeArgumentList_);

        setUshr(_ushr_);

    }

    @Override
    public Object clone()
    {
        return new AUshrTypeArguments(
            cloneNode(this._lt1_),
            cloneList(this._heads1_),
            cloneNode(this._specifier1_),
            cloneNode(this._lt2_),
            cloneList(this._heads2_),
            cloneNode(this._specifier2_),
            cloneNode(this._lt3_),
            cloneNode(this._typeArgumentList_),
            cloneNode(this._ushr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUshrTypeArguments(this);
    }

    public TLt getLt1()
    {
        return this._lt1_;
    }

    public void setLt1(TLt node)
    {
        if(this._lt1_ != null)
        {
            this._lt1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lt1_ = node;
    }

    public LinkedList<PTypeArgumentListHead> getHeads1()
    {
        return this._heads1_;
    }

    public void setHeads1(List<?> list)
    {
        for(PTypeArgumentListHead e : this._heads1_)
        {
            e.parent(null);
        }
        this._heads1_.clear();

        for(Object obj_e : list)
        {
            PTypeArgumentListHead e = (PTypeArgumentListHead) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._heads1_.add(e);
        }
    }

    public PTypeDeclSpecifier getSpecifier1()
    {
        return this._specifier1_;
    }

    public void setSpecifier1(PTypeDeclSpecifier node)
    {
        if(this._specifier1_ != null)
        {
            this._specifier1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._specifier1_ = node;
    }

    public TLt getLt2()
    {
        return this._lt2_;
    }

    public void setLt2(TLt node)
    {
        if(this._lt2_ != null)
        {
            this._lt2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lt2_ = node;
    }

    public LinkedList<PTypeArgumentListHead> getHeads2()
    {
        return this._heads2_;
    }

    public void setHeads2(List<?> list)
    {
        for(PTypeArgumentListHead e : this._heads2_)
        {
            e.parent(null);
        }
        this._heads2_.clear();

        for(Object obj_e : list)
        {
            PTypeArgumentListHead e = (PTypeArgumentListHead) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._heads2_.add(e);
        }
    }

    public PTypeDeclSpecifier getSpecifier2()
    {
        return this._specifier2_;
    }

    public void setSpecifier2(PTypeDeclSpecifier node)
    {
        if(this._specifier2_ != null)
        {
            this._specifier2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._specifier2_ = node;
    }

    public TLt getLt3()
    {
        return this._lt3_;
    }

    public void setLt3(TLt node)
    {
        if(this._lt3_ != null)
        {
            this._lt3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lt3_ = node;
    }

    public PTypeArgumentList getTypeArgumentList()
    {
        return this._typeArgumentList_;
    }

    public void setTypeArgumentList(PTypeArgumentList node)
    {
        if(this._typeArgumentList_ != null)
        {
            this._typeArgumentList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._typeArgumentList_ = node;
    }

    public TUshr getUshr()
    {
        return this._ushr_;
    }

    public void setUshr(TUshr node)
    {
        if(this._ushr_ != null)
        {
            this._ushr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ushr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lt1_)
            + toString(this._heads1_)
            + toString(this._specifier1_)
            + toString(this._lt2_)
            + toString(this._heads2_)
            + toString(this._specifier2_)
            + toString(this._lt3_)
            + toString(this._typeArgumentList_)
            + toString(this._ushr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lt1_ == child)
        {
            this._lt1_ = null;
            return;
        }

        if(this._heads1_.remove(child))
        {
            return;
        }

        if(this._specifier1_ == child)
        {
            this._specifier1_ = null;
            return;
        }

        if(this._lt2_ == child)
        {
            this._lt2_ = null;
            return;
        }

        if(this._heads2_.remove(child))
        {
            return;
        }

        if(this._specifier2_ == child)
        {
            this._specifier2_ = null;
            return;
        }

        if(this._lt3_ == child)
        {
            this._lt3_ = null;
            return;
        }

        if(this._typeArgumentList_ == child)
        {
            this._typeArgumentList_ = null;
            return;
        }

        if(this._ushr_ == child)
        {
            this._ushr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lt1_ == oldChild)
        {
            setLt1((TLt) newChild);
            return;
        }

        for(ListIterator<PTypeArgumentListHead> i = this._heads1_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PTypeArgumentListHead) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._specifier1_ == oldChild)
        {
            setSpecifier1((PTypeDeclSpecifier) newChild);
            return;
        }

        if(this._lt2_ == oldChild)
        {
            setLt2((TLt) newChild);
            return;
        }

        for(ListIterator<PTypeArgumentListHead> i = this._heads2_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PTypeArgumentListHead) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._specifier2_ == oldChild)
        {
            setSpecifier2((PTypeDeclSpecifier) newChild);
            return;
        }

        if(this._lt3_ == oldChild)
        {
            setLt3((TLt) newChild);
            return;
        }

        if(this._typeArgumentList_ == oldChild)
        {
            setTypeArgumentList((PTypeArgumentList) newChild);
            return;
        }

        if(this._ushr_ == oldChild)
        {
            setUshr((TUshr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
