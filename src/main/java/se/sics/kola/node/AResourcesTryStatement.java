/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AResourcesTryStatement extends PTryStatement
{
    private PTryWithResourcesStatement _tryWithResourcesStatement_;

    public AResourcesTryStatement()
    {
        // Constructor
    }

    public AResourcesTryStatement(
        @SuppressWarnings("hiding") PTryWithResourcesStatement _tryWithResourcesStatement_)
    {
        // Constructor
        setTryWithResourcesStatement(_tryWithResourcesStatement_);

    }

    @Override
    public Object clone()
    {
        return new AResourcesTryStatement(
            cloneNode(this._tryWithResourcesStatement_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAResourcesTryStatement(this);
    }

    public PTryWithResourcesStatement getTryWithResourcesStatement()
    {
        return this._tryWithResourcesStatement_;
    }

    public void setTryWithResourcesStatement(PTryWithResourcesStatement node)
    {
        if(this._tryWithResourcesStatement_ != null)
        {
            this._tryWithResourcesStatement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tryWithResourcesStatement_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tryWithResourcesStatement_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tryWithResourcesStatement_ == child)
        {
            this._tryWithResourcesStatement_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tryWithResourcesStatement_ == oldChild)
        {
            setTryWithResourcesStatement((PTryWithResourcesStatement) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
