/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AUnaryPreIncrementExpression extends PPreIncrementExpression
{
    private TPlusPlus _plusPlus_;
    private PUnaryExpressionNoName _unaryExpressionNoName_;

    public AUnaryPreIncrementExpression()
    {
        // Constructor
    }

    public AUnaryPreIncrementExpression(
        @SuppressWarnings("hiding") TPlusPlus _plusPlus_,
        @SuppressWarnings("hiding") PUnaryExpressionNoName _unaryExpressionNoName_)
    {
        // Constructor
        setPlusPlus(_plusPlus_);

        setUnaryExpressionNoName(_unaryExpressionNoName_);

    }

    @Override
    public Object clone()
    {
        return new AUnaryPreIncrementExpression(
            cloneNode(this._plusPlus_),
            cloneNode(this._unaryExpressionNoName_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnaryPreIncrementExpression(this);
    }

    public TPlusPlus getPlusPlus()
    {
        return this._plusPlus_;
    }

    public void setPlusPlus(TPlusPlus node)
    {
        if(this._plusPlus_ != null)
        {
            this._plusPlus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plusPlus_ = node;
    }

    public PUnaryExpressionNoName getUnaryExpressionNoName()
    {
        return this._unaryExpressionNoName_;
    }

    public void setUnaryExpressionNoName(PUnaryExpressionNoName node)
    {
        if(this._unaryExpressionNoName_ != null)
        {
            this._unaryExpressionNoName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unaryExpressionNoName_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._plusPlus_)
            + toString(this._unaryExpressionNoName_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._plusPlus_ == child)
        {
            this._plusPlus_ = null;
            return;
        }

        if(this._unaryExpressionNoName_ == child)
        {
            this._unaryExpressionNoName_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._plusPlus_ == oldChild)
        {
            setPlusPlus((TPlusPlus) newChild);
            return;
        }

        if(this._unaryExpressionNoName_ == oldChild)
        {
            setUnaryExpressionNoName((PUnaryExpressionNoName) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
