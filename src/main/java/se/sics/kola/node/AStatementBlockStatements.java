/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AStatementBlockStatements extends PBlockStatements
{
    private PBlockStatement _blockStatement_;

    public AStatementBlockStatements()
    {
        // Constructor
    }

    public AStatementBlockStatements(
        @SuppressWarnings("hiding") PBlockStatement _blockStatement_)
    {
        // Constructor
        setBlockStatement(_blockStatement_);

    }

    @Override
    public Object clone()
    {
        return new AStatementBlockStatements(
            cloneNode(this._blockStatement_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStatementBlockStatements(this);
    }

    public PBlockStatement getBlockStatement()
    {
        return this._blockStatement_;
    }

    public void setBlockStatement(PBlockStatement node)
    {
        if(this._blockStatement_ != null)
        {
            this._blockStatement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blockStatement_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._blockStatement_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._blockStatement_ == child)
        {
            this._blockStatement_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._blockStatement_ == oldChild)
        {
            setBlockStatement((PBlockStatement) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
