/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AFieldClassMemberDeclaration extends PClassMemberDeclaration
{
    private PFieldDeclaration _fieldDeclaration_;

    public AFieldClassMemberDeclaration()
    {
        // Constructor
    }

    public AFieldClassMemberDeclaration(
        @SuppressWarnings("hiding") PFieldDeclaration _fieldDeclaration_)
    {
        // Constructor
        setFieldDeclaration(_fieldDeclaration_);

    }

    @Override
    public Object clone()
    {
        return new AFieldClassMemberDeclaration(
            cloneNode(this._fieldDeclaration_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFieldClassMemberDeclaration(this);
    }

    public PFieldDeclaration getFieldDeclaration()
    {
        return this._fieldDeclaration_;
    }

    public void setFieldDeclaration(PFieldDeclaration node)
    {
        if(this._fieldDeclaration_ != null)
        {
            this._fieldDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fieldDeclaration_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fieldDeclaration_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fieldDeclaration_ == child)
        {
            this._fieldDeclaration_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fieldDeclaration_ == oldChild)
        {
            setFieldDeclaration((PFieldDeclaration) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
