/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class ADeclarationsClassBodyDeclarations extends PClassBodyDeclarations
{
    private PClassBodyDeclarations _classBodyDeclarations_;
    private PClassBodyDeclaration _classBodyDeclaration_;

    public ADeclarationsClassBodyDeclarations()
    {
        // Constructor
    }

    public ADeclarationsClassBodyDeclarations(
        @SuppressWarnings("hiding") PClassBodyDeclarations _classBodyDeclarations_,
        @SuppressWarnings("hiding") PClassBodyDeclaration _classBodyDeclaration_)
    {
        // Constructor
        setClassBodyDeclarations(_classBodyDeclarations_);

        setClassBodyDeclaration(_classBodyDeclaration_);

    }

    @Override
    public Object clone()
    {
        return new ADeclarationsClassBodyDeclarations(
            cloneNode(this._classBodyDeclarations_),
            cloneNode(this._classBodyDeclaration_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclarationsClassBodyDeclarations(this);
    }

    public PClassBodyDeclarations getClassBodyDeclarations()
    {
        return this._classBodyDeclarations_;
    }

    public void setClassBodyDeclarations(PClassBodyDeclarations node)
    {
        if(this._classBodyDeclarations_ != null)
        {
            this._classBodyDeclarations_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classBodyDeclarations_ = node;
    }

    public PClassBodyDeclaration getClassBodyDeclaration()
    {
        return this._classBodyDeclaration_;
    }

    public void setClassBodyDeclaration(PClassBodyDeclaration node)
    {
        if(this._classBodyDeclaration_ != null)
        {
            this._classBodyDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classBodyDeclaration_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._classBodyDeclarations_)
            + toString(this._classBodyDeclaration_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._classBodyDeclarations_ == child)
        {
            this._classBodyDeclarations_ = null;
            return;
        }

        if(this._classBodyDeclaration_ == child)
        {
            this._classBodyDeclaration_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._classBodyDeclarations_ == oldChild)
        {
            setClassBodyDeclarations((PClassBodyDeclarations) newChild);
            return;
        }

        if(this._classBodyDeclaration_ == oldChild)
        {
            setClassBodyDeclaration((PClassBodyDeclaration) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
