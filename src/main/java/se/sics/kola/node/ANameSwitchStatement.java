/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class ANameSwitchStatement extends PSwitchStatement
{
    private TSwitchKeyword _switchKeyword_;
    private TLPar _lPar_;
    private PName _name_;
    private TRPar _rPar_;
    private PSwitchBlock _switchBlock_;

    public ANameSwitchStatement()
    {
        // Constructor
    }

    public ANameSwitchStatement(
        @SuppressWarnings("hiding") TSwitchKeyword _switchKeyword_,
        @SuppressWarnings("hiding") TLPar _lPar_,
        @SuppressWarnings("hiding") PName _name_,
        @SuppressWarnings("hiding") TRPar _rPar_,
        @SuppressWarnings("hiding") PSwitchBlock _switchBlock_)
    {
        // Constructor
        setSwitchKeyword(_switchKeyword_);

        setLPar(_lPar_);

        setName(_name_);

        setRPar(_rPar_);

        setSwitchBlock(_switchBlock_);

    }

    @Override
    public Object clone()
    {
        return new ANameSwitchStatement(
            cloneNode(this._switchKeyword_),
            cloneNode(this._lPar_),
            cloneNode(this._name_),
            cloneNode(this._rPar_),
            cloneNode(this._switchBlock_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANameSwitchStatement(this);
    }

    public TSwitchKeyword getSwitchKeyword()
    {
        return this._switchKeyword_;
    }

    public void setSwitchKeyword(TSwitchKeyword node)
    {
        if(this._switchKeyword_ != null)
        {
            this._switchKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._switchKeyword_ = node;
    }

    public TLPar getLPar()
    {
        return this._lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(this._lPar_ != null)
        {
            this._lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lPar_ = node;
    }

    public PName getName()
    {
        return this._name_;
    }

    public void setName(PName node)
    {
        if(this._name_ != null)
        {
            this._name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._name_ = node;
    }

    public TRPar getRPar()
    {
        return this._rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(this._rPar_ != null)
        {
            this._rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rPar_ = node;
    }

    public PSwitchBlock getSwitchBlock()
    {
        return this._switchBlock_;
    }

    public void setSwitchBlock(PSwitchBlock node)
    {
        if(this._switchBlock_ != null)
        {
            this._switchBlock_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._switchBlock_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._switchKeyword_)
            + toString(this._lPar_)
            + toString(this._name_)
            + toString(this._rPar_)
            + toString(this._switchBlock_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._switchKeyword_ == child)
        {
            this._switchKeyword_ = null;
            return;
        }

        if(this._lPar_ == child)
        {
            this._lPar_ = null;
            return;
        }

        if(this._name_ == child)
        {
            this._name_ = null;
            return;
        }

        if(this._rPar_ == child)
        {
            this._rPar_ = null;
            return;
        }

        if(this._switchBlock_ == child)
        {
            this._switchBlock_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._switchKeyword_ == oldChild)
        {
            setSwitchKeyword((TSwitchKeyword) newChild);
            return;
        }

        if(this._lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(this._name_ == oldChild)
        {
            setName((PName) newChild);
            return;
        }

        if(this._rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        if(this._switchBlock_ == oldChild)
        {
            setSwitchBlock((PSwitchBlock) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
