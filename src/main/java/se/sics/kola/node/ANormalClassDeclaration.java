/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class ANormalClassDeclaration extends PNormalClassDeclaration
{
    private PModifiers _modifiers_;
    private TClassKeyword _classKeyword_;
    private TIdentifier _identifier_;
    private PTypeParameters _typeParameters_;
    private PSuper _super_;
    private PInterfaces _interfaces_;
    private PClassBody _classBody_;

    public ANormalClassDeclaration()
    {
        // Constructor
    }

    public ANormalClassDeclaration(
        @SuppressWarnings("hiding") PModifiers _modifiers_,
        @SuppressWarnings("hiding") TClassKeyword _classKeyword_,
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") PTypeParameters _typeParameters_,
        @SuppressWarnings("hiding") PSuper _super_,
        @SuppressWarnings("hiding") PInterfaces _interfaces_,
        @SuppressWarnings("hiding") PClassBody _classBody_)
    {
        // Constructor
        setModifiers(_modifiers_);

        setClassKeyword(_classKeyword_);

        setIdentifier(_identifier_);

        setTypeParameters(_typeParameters_);

        setSuper(_super_);

        setInterfaces(_interfaces_);

        setClassBody(_classBody_);

    }

    @Override
    public Object clone()
    {
        return new ANormalClassDeclaration(
            cloneNode(this._modifiers_),
            cloneNode(this._classKeyword_),
            cloneNode(this._identifier_),
            cloneNode(this._typeParameters_),
            cloneNode(this._super_),
            cloneNode(this._interfaces_),
            cloneNode(this._classBody_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANormalClassDeclaration(this);
    }

    public PModifiers getModifiers()
    {
        return this._modifiers_;
    }

    public void setModifiers(PModifiers node)
    {
        if(this._modifiers_ != null)
        {
            this._modifiers_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._modifiers_ = node;
    }

    public TClassKeyword getClassKeyword()
    {
        return this._classKeyword_;
    }

    public void setClassKeyword(TClassKeyword node)
    {
        if(this._classKeyword_ != null)
        {
            this._classKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classKeyword_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public PTypeParameters getTypeParameters()
    {
        return this._typeParameters_;
    }

    public void setTypeParameters(PTypeParameters node)
    {
        if(this._typeParameters_ != null)
        {
            this._typeParameters_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._typeParameters_ = node;
    }

    public PSuper getSuper()
    {
        return this._super_;
    }

    public void setSuper(PSuper node)
    {
        if(this._super_ != null)
        {
            this._super_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._super_ = node;
    }

    public PInterfaces getInterfaces()
    {
        return this._interfaces_;
    }

    public void setInterfaces(PInterfaces node)
    {
        if(this._interfaces_ != null)
        {
            this._interfaces_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._interfaces_ = node;
    }

    public PClassBody getClassBody()
    {
        return this._classBody_;
    }

    public void setClassBody(PClassBody node)
    {
        if(this._classBody_ != null)
        {
            this._classBody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classBody_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._modifiers_)
            + toString(this._classKeyword_)
            + toString(this._identifier_)
            + toString(this._typeParameters_)
            + toString(this._super_)
            + toString(this._interfaces_)
            + toString(this._classBody_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._modifiers_ == child)
        {
            this._modifiers_ = null;
            return;
        }

        if(this._classKeyword_ == child)
        {
            this._classKeyword_ = null;
            return;
        }

        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._typeParameters_ == child)
        {
            this._typeParameters_ = null;
            return;
        }

        if(this._super_ == child)
        {
            this._super_ = null;
            return;
        }

        if(this._interfaces_ == child)
        {
            this._interfaces_ = null;
            return;
        }

        if(this._classBody_ == child)
        {
            this._classBody_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._modifiers_ == oldChild)
        {
            setModifiers((PModifiers) newChild);
            return;
        }

        if(this._classKeyword_ == oldChild)
        {
            setClassKeyword((TClassKeyword) newChild);
            return;
        }

        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(this._typeParameters_ == oldChild)
        {
            setTypeParameters((PTypeParameters) newChild);
            return;
        }

        if(this._super_ == oldChild)
        {
            setSuper((PSuper) newChild);
            return;
        }

        if(this._interfaces_ == oldChild)
        {
            setInterfaces((PInterfaces) newChild);
            return;
        }

        if(this._classBody_ == oldChild)
        {
            setClassBody((PClassBody) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
