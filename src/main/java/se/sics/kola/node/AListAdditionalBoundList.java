/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AListAdditionalBoundList extends PAdditionalBoundList
{
    private PAdditionalBound _additionalBound_;
    private PAdditionalBoundList _additionalBoundList_;

    public AListAdditionalBoundList()
    {
        // Constructor
    }

    public AListAdditionalBoundList(
        @SuppressWarnings("hiding") PAdditionalBound _additionalBound_,
        @SuppressWarnings("hiding") PAdditionalBoundList _additionalBoundList_)
    {
        // Constructor
        setAdditionalBound(_additionalBound_);

        setAdditionalBoundList(_additionalBoundList_);

    }

    @Override
    public Object clone()
    {
        return new AListAdditionalBoundList(
            cloneNode(this._additionalBound_),
            cloneNode(this._additionalBoundList_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListAdditionalBoundList(this);
    }

    public PAdditionalBound getAdditionalBound()
    {
        return this._additionalBound_;
    }

    public void setAdditionalBound(PAdditionalBound node)
    {
        if(this._additionalBound_ != null)
        {
            this._additionalBound_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._additionalBound_ = node;
    }

    public PAdditionalBoundList getAdditionalBoundList()
    {
        return this._additionalBoundList_;
    }

    public void setAdditionalBoundList(PAdditionalBoundList node)
    {
        if(this._additionalBoundList_ != null)
        {
            this._additionalBoundList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._additionalBoundList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._additionalBound_)
            + toString(this._additionalBoundList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._additionalBound_ == child)
        {
            this._additionalBound_ = null;
            return;
        }

        if(this._additionalBoundList_ == child)
        {
            this._additionalBoundList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._additionalBound_ == oldChild)
        {
            setAdditionalBound((PAdditionalBound) newChild);
            return;
        }

        if(this._additionalBoundList_ == oldChild)
        {
            setAdditionalBoundList((PAdditionalBoundList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
