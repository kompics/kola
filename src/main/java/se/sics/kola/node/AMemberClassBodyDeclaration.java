/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AMemberClassBodyDeclaration extends PClassBodyDeclaration
{
    private PClassMemberDeclaration _classMemberDeclaration_;

    public AMemberClassBodyDeclaration()
    {
        // Constructor
    }

    public AMemberClassBodyDeclaration(
        @SuppressWarnings("hiding") PClassMemberDeclaration _classMemberDeclaration_)
    {
        // Constructor
        setClassMemberDeclaration(_classMemberDeclaration_);

    }

    @Override
    public Object clone()
    {
        return new AMemberClassBodyDeclaration(
            cloneNode(this._classMemberDeclaration_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMemberClassBodyDeclaration(this);
    }

    public PClassMemberDeclaration getClassMemberDeclaration()
    {
        return this._classMemberDeclaration_;
    }

    public void setClassMemberDeclaration(PClassMemberDeclaration node)
    {
        if(this._classMemberDeclaration_ != null)
        {
            this._classMemberDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classMemberDeclaration_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._classMemberDeclaration_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._classMemberDeclaration_ == child)
        {
            this._classMemberDeclaration_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._classMemberDeclaration_ == oldChild)
        {
            setClassMemberDeclaration((PClassMemberDeclaration) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
