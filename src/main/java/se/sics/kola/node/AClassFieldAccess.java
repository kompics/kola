/* This file was generated by SableCC (http://www.sablecc.org/). */

package se.sics.kola.node;

import se.sics.kola.analysis.*;

@SuppressWarnings("nls")
public final class AClassFieldAccess extends PFieldAccess
{
    private PClassName _className_;
    private TDot _dot1_;
    private TSuperKeyword _superKeyword_;
    private TDot _dot2_;
    private TIdentifier _identifier_;

    public AClassFieldAccess()
    {
        // Constructor
    }

    public AClassFieldAccess(
        @SuppressWarnings("hiding") PClassName _className_,
        @SuppressWarnings("hiding") TDot _dot1_,
        @SuppressWarnings("hiding") TSuperKeyword _superKeyword_,
        @SuppressWarnings("hiding") TDot _dot2_,
        @SuppressWarnings("hiding") TIdentifier _identifier_)
    {
        // Constructor
        setClassName(_className_);

        setDot1(_dot1_);

        setSuperKeyword(_superKeyword_);

        setDot2(_dot2_);

        setIdentifier(_identifier_);

    }

    @Override
    public Object clone()
    {
        return new AClassFieldAccess(
            cloneNode(this._className_),
            cloneNode(this._dot1_),
            cloneNode(this._superKeyword_),
            cloneNode(this._dot2_),
            cloneNode(this._identifier_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAClassFieldAccess(this);
    }

    public PClassName getClassName()
    {
        return this._className_;
    }

    public void setClassName(PClassName node)
    {
        if(this._className_ != null)
        {
            this._className_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._className_ = node;
    }

    public TDot getDot1()
    {
        return this._dot1_;
    }

    public void setDot1(TDot node)
    {
        if(this._dot1_ != null)
        {
            this._dot1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dot1_ = node;
    }

    public TSuperKeyword getSuperKeyword()
    {
        return this._superKeyword_;
    }

    public void setSuperKeyword(TSuperKeyword node)
    {
        if(this._superKeyword_ != null)
        {
            this._superKeyword_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._superKeyword_ = node;
    }

    public TDot getDot2()
    {
        return this._dot2_;
    }

    public void setDot2(TDot node)
    {
        if(this._dot2_ != null)
        {
            this._dot2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dot2_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._className_)
            + toString(this._dot1_)
            + toString(this._superKeyword_)
            + toString(this._dot2_)
            + toString(this._identifier_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._className_ == child)
        {
            this._className_ = null;
            return;
        }

        if(this._dot1_ == child)
        {
            this._dot1_ = null;
            return;
        }

        if(this._superKeyword_ == child)
        {
            this._superKeyword_ = null;
            return;
        }

        if(this._dot2_ == child)
        {
            this._dot2_ = null;
            return;
        }

        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._className_ == oldChild)
        {
            setClassName((PClassName) newChild);
            return;
        }

        if(this._dot1_ == oldChild)
        {
            setDot1((TDot) newChild);
            return;
        }

        if(this._superKeyword_ == oldChild)
        {
            setSuperKeyword((TSuperKeyword) newChild);
            return;
        }

        if(this._dot2_ == oldChild)
        {
            setDot2((TDot) newChild);
            return;
        }

        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
